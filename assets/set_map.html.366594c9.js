import{_ as n,o as s,c as a,d as e}from"./app.91a380bb.js";const p={},t=e(`<h1 id="\u9762\u8BD5\u5B98-\u4F60\u662F\u600E\u4E48\u7406\u89E3-es6-\u65B0\u589E-set\u3001map-\u4E24\u79CD\u6570\u636E\u7ED3\u6784\u7684" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u5B98-\u4F60\u662F\u600E\u4E48\u7406\u89E3-es6-\u65B0\u589E-set\u3001map-\u4E24\u79CD\u6570\u636E\u7ED3\u6784\u7684" aria-hidden="true">#</a> \u9762\u8BD5\u5B98\uFF1A\u4F60\u662F\u600E\u4E48\u7406\u89E3 ES6 \u65B0\u589E Set\u3001Map \u4E24\u79CD\u6570\u636E\u7ED3\u6784\u7684\uFF1F</h1><p><img src="https://static.vue-js.com/2b947d00-560c-11eb-85f6-6fac77c0c9b3.png" alt=""></p><p>\u5982\u679C\u8981\u7528\u4E00\u53E5\u6765\u63CF\u8FF0\uFF0C\u6211\u4EEC\u53EF\u4EE5\u8BF4</p><p><code>Set</code>\u662F\u4E00\u79CD\u53EB\u505A\u96C6\u5408\u7684\u6570\u636E\u7ED3\u6784\uFF0C<code>Map</code>\u662F\u4E00\u79CD\u53EB\u505A\u5B57\u5178\u7684\u6570\u636E\u7ED3\u6784</p><p>\u4EC0\u4E48\u662F\u96C6\u5408\uFF1F\u4EC0\u4E48\u53C8\u662F\u5B57\u5178\uFF1F</p><ul><li><p>\u96C6\u5408<br> \u662F\u7531\u4E00\u5806\u65E0\u5E8F\u7684\u3001\u76F8\u5173\u8054\u7684\uFF0C\u4E14\u4E0D\u91CD\u590D\u7684\u5185\u5B58\u7ED3\u6784\u3010\u6570\u5B66\u4E2D\u79F0\u4E3A\u5143\u7D20\u3011\u7EC4\u6210\u7684\u7EC4\u5408</p></li><li><p>\u5B57\u5178<br> \u662F\u4E00\u4E9B\u5143\u7D20\u7684\u96C6\u5408\u3002\u6BCF\u4E2A\u5143\u7D20\u6709\u4E00\u4E2A\u79F0\u4F5C key \u7684\u57DF\uFF0C\u4E0D\u540C\u5143\u7D20\u7684 key \u5404\u4E0D\u76F8\u540C</p></li></ul><p>\u533A\u522B\uFF1F</p><ul><li>\u5171\u540C\u70B9\uFF1A\u96C6\u5408\u3001\u5B57\u5178\u90FD\u53EF\u4EE5\u5B58\u50A8\u4E0D\u91CD\u590D\u7684\u503C</li><li>\u4E0D\u540C\u70B9\uFF1A\u96C6\u5408\u662F\u4EE5[\u503C\uFF0C\u503C]\u7684\u5F62\u5F0F\u5B58\u50A8\u5143\u7D20\uFF0C\u5B57\u5178\u662F\u4EE5[\u952E\uFF0C\u503C]\u7684\u5F62\u5F0F\u5B58\u50A8</li></ul><h2 id="\u4E00\u3001set" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001set" aria-hidden="true">#</a> \u4E00\u3001Set</h2><p><code> Set</code>\u662F<code>es6</code>\u65B0\u589E\u7684\u6570\u636E\u7ED3\u6784\uFF0C\u7C7B\u4F3C\u4E8E\u6570\u7EC4\uFF0C\u4F46\u662F\u6210\u5458\u7684\u503C\u90FD\u662F\u552F\u4E00\u7684\uFF0C\u6CA1\u6709\u91CD\u590D\u7684\u503C\uFF0C\u6211\u4EEC\u4E00\u822C\u79F0\u4E3A\u96C6\u5408</p><p><code>Set</code>\u672C\u8EAB\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u7528\u6765\u751F\u6210 Set \u6570\u636E\u7ED3\u6784</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> s <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u589E\u5220\u6539\u67E5" tabindex="-1"><a class="header-anchor" href="#\u589E\u5220\u6539\u67E5" aria-hidden="true">#</a> \u589E\u5220\u6539\u67E5</h3><p><code>Set</code>\u7684\u5B9E\u4F8B\u5173\u4E8E\u589E\u5220\u6539\u67E5\u7684\u65B9\u6CD5\uFF1A</p><ul><li><p>add()</p></li><li><p>delete()</p></li><li><p>has()</p></li><li><p>clear()</p></li></ul><h3 id="add" tabindex="-1"><a class="header-anchor" href="#add" aria-hidden="true">#</a> add()</h3><p>\u6DFB\u52A0\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE <code>Set</code> \u7ED3\u6784\u672C\u8EAB</p><p>\u5F53\u6DFB\u52A0\u5B9E\u4F8B\u4E2D\u5DF2\u7ECF\u5B58\u5728\u7684\u5143\u7D20\uFF0C<code>set</code>\u4E0D\u4F1A\u8FDB\u884C\u5904\u7406\u6DFB\u52A0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>s<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token comment">// 2\u53EA\u88AB\u6DFB\u52A0\u4E86\u4E00\u6B21</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="delete" tabindex="-1"><a class="header-anchor" href="#delete" aria-hidden="true">#</a> delete()</h3><p>\u5220\u9664\u67D0\u4E2A\u503C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u5220\u9664\u662F\u5426\u6210\u529F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>s<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="has" tabindex="-1"><a class="header-anchor" href="#has" aria-hidden="true">#</a> has()</h3><p>\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u5224\u65AD\u8BE5\u503C\u662F\u5426\u4E3A<code>Set</code>\u7684\u6210\u5458</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>s<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="clear" tabindex="-1"><a class="header-anchor" href="#clear" aria-hidden="true">#</a> clear()</h3><p>\u6E05\u9664\u6240\u6709\u6210\u5458\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>s<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386" aria-hidden="true">#</a> \u904D\u5386</h3><p><code>Set</code>\u5B9E\u4F8B\u904D\u5386\u7684\u65B9\u6CD5\u6709\u5982\u4E0B\uFF1A</p><p>\u5173\u4E8E\u904D\u5386\u7684\u65B9\u6CD5\uFF0C\u6709\u5982\u4E0B\uFF1A</p><ul><li>keys()\uFF1A\u8FD4\u56DE\u952E\u540D\u7684\u904D\u5386\u5668</li><li>values()\uFF1A\u8FD4\u56DE\u952E\u503C\u7684\u904D\u5386\u5668</li><li>entries()\uFF1A\u8FD4\u56DE\u952E\u503C\u5BF9\u7684\u904D\u5386\u5668</li><li>forEach()\uFF1A\u4F7F\u7528\u56DE\u8C03\u51FD\u6570\u904D\u5386\u6BCF\u4E2A\u6210\u5458</li></ul><p><code>Set</code>\u7684\u904D\u5386\u987A\u5E8F\u5C31\u662F\u63D2\u5165\u987A\u5E8F</p><p><code>keys</code>\u65B9\u6CD5\u3001<code>values</code>\u65B9\u6CD5\u3001<code>entries</code>\u65B9\u6CD5\u8FD4\u56DE\u7684\u90FD\u662F\u904D\u5386\u5668\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> set<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// red</span>
<span class="token comment">// green</span>
<span class="token comment">// blue</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> set<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// red</span>
<span class="token comment">// green</span>
<span class="token comment">// blue</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> set<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// [&quot;red&quot;, &quot;red&quot;]</span>
<span class="token comment">// [&quot;green&quot;, &quot;green&quot;]</span>
<span class="token comment">// [&quot;blue&quot;, &quot;blue&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>forEach()</code>\u7528\u4E8E\u5BF9\u6BCF\u4E2A\u6210\u5458\u6267\u884C\u67D0\u79CD\u64CD\u4F5C\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u952E\u503C\u3001\u952E\u540D\u90FD\u76F8\u7B49\uFF0C\u540C\u6837\u7684<code>forEach</code>\u65B9\u6CD5\u6709\u7B2C\u4E8C\u4E2A\u53C2\u6570\uFF0C\u7528\u4E8E\u7ED1\u5B9A\u5904\u7406\u51FD\u6570\u7684<code>this</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
set<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token string">&#39; : &#39;</span> <span class="token operator">+</span> value<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// 1 : 1</span>
<span class="token comment">// 4 : 4</span>
<span class="token comment">// 9 : 9</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6269\u5C55\u8FD0\u7B97\u7B26\u548C<code> Set</code> \u7ED3\u6784\u76F8\u7ED3\u5408\u5B9E\u73B0\u6570\u7EC4\u6216\u5B57\u7B26\u4E32\u53BB\u91CD</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u6570\u7EC4</span>
<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">]</span>
<span class="token keyword">let</span> unique <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">// [3, 5, 2]</span>

<span class="token comment">// \u5B57\u7B26\u4E32</span>
<span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;352255&#39;</span>
<span class="token keyword">let</span> unique <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span><span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&#39;</span><span class="token punctuation">)</span> <span class="token comment">// &quot;352&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5B9E\u73B0\u5E76\u96C6\u3001\u4EA4\u96C6\u3001\u548C\u5DEE\u96C6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token comment">// \u5E76\u96C6</span>
<span class="token keyword">let</span> union <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">,</span> <span class="token operator">...</span>b<span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// Set {1, 2, 3, 4}</span>

<span class="token comment">// \u4EA4\u96C6</span>
<span class="token keyword">let</span> intersect <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// set {2, 3}</span>

<span class="token comment">// \uFF08a \u76F8\u5BF9\u4E8E b \u7684\uFF09\u5DEE\u96C6</span>
<span class="token keyword">let</span> difference <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token operator">...</span>a<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token operator">!</span>b<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// Set {1}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C\u3001map" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001map" aria-hidden="true">#</a> \u4E8C\u3001Map</h2><p><code>Map</code>\u7C7B\u578B\u662F\u952E\u503C\u5BF9\u7684\u6709\u5E8F\u5217\u8868\uFF0C\u800C\u952E\u548C\u503C\u90FD\u53EF\u4EE5\u662F\u4EFB\u610F\u7C7B\u578B</p><p><code>Map</code>\u672C\u8EAB\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u7528\u6765\u751F\u6210 <code>Map</code> \u6570\u636E\u7ED3\u6784</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u589E\u5220\u6539\u67E5-1" tabindex="-1"><a class="header-anchor" href="#\u589E\u5220\u6539\u67E5-1" aria-hidden="true">#</a> \u589E\u5220\u6539\u67E5</h3><p><code>Map</code> \u7ED3\u6784\u7684\u5B9E\u4F8B\u9488\u5BF9\u589E\u5220\u6539\u67E5\u6709\u4EE5\u4E0B\u5C5E\u6027\u548C\u64CD\u4F5C\u65B9\u6CD5\uFF1A</p><ul><li>size \u5C5E\u6027</li><li>set()</li><li>get()</li><li>has()</li><li>delete()</li><li>clear()</li></ul><h3 id="size" tabindex="-1"><a class="header-anchor" href="#size" aria-hidden="true">#</a> size</h3><p><code>size</code>\u5C5E\u6027\u8FD4\u56DE Map \u7ED3\u6784\u7684\u6210\u5458\u603B\u6570\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>

map<span class="token punctuation">.</span>size <span class="token comment">// 2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set()</h3><p>\u8BBE\u7F6E\u952E\u540D<code>key</code>\u5BF9\u5E94\u7684\u952E\u503C\u4E3A<code>value</code>\uFF0C\u7136\u540E\u8FD4\u56DE\u6574\u4E2A Map \u7ED3\u6784</p><p>\u5982\u679C<code>key</code>\u5DF2\u7ECF\u6709\u503C\uFF0C\u5219\u952E\u503C\u4F1A\u88AB\u66F4\u65B0\uFF0C\u5426\u5219\u5C31\u65B0\u751F\u6210\u8BE5\u952E</p><p>\u540C\u65F6\u8FD4\u56DE\u7684\u662F\u5F53\u524D<code>Map</code>\u5BF9\u8C61\uFF0C\u53EF\u91C7\u7528\u94FE\u5F0F\u5199\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;edition&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token comment">// \u952E\u662F\u5B57\u7B26\u4E32</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">262</span><span class="token punctuation">,</span> <span class="token string">&#39;standard&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u952E\u662F\u6570\u503C</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token string">&#39;nah&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u952E\u662F undefined</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u94FE\u5F0F\u64CD\u4F5C</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get()</h3><p><code>get</code>\u65B9\u6CD5\u8BFB\u53D6<code>key</code>\u5BF9\u5E94\u7684\u952E\u503C\uFF0C\u5982\u679C\u627E\u4E0D\u5230<code>key</code>\uFF0C\u8FD4\u56DE<code>undefined</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">hello</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>hello<span class="token punctuation">,</span> <span class="token string">&#39;Hello ES6!&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u952E\u662F\u51FD\u6570</span>

m<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>hello<span class="token punctuation">)</span> <span class="token comment">// Hello ES6!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="has-1" tabindex="-1"><a class="header-anchor" href="#has-1" aria-hidden="true">#</a> has()</h3><p><code>has</code>\u65B9\u6CD5\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C\uFF0C\u8868\u793A\u67D0\u4E2A\u952E\u662F\u5426\u5728\u5F53\u524D Map \u5BF9\u8C61\u4E4B\u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;edition&#39;</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">262</span><span class="token punctuation">,</span> <span class="token string">&#39;standard&#39;</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token string">&#39;nah&#39;</span><span class="token punctuation">)</span>

m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;edition&#39;</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&#39;years&#39;</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token number">262</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="delete-1" tabindex="-1"><a class="header-anchor" href="#delete-1" aria-hidden="true">#</a> delete()</h3><p><code>delete</code>\u65B9\u6CD5\u5220\u9664\u67D0\u4E2A\u952E\uFF0C\u8FD4\u56DE<code>true</code>\u3002\u5982\u679C\u5220\u9664\u5931\u8D25\uFF0C\u8FD4\u56DE<code>false</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> m <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">,</span> <span class="token string">&#39;nah&#39;</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">// true</span>

m<span class="token punctuation">.</span><span class="token function">delete</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span>
m<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="clear-1" tabindex="-1"><a class="header-anchor" href="#clear-1" aria-hidden="true">#</a> clear()</h3><p><code>clear</code>\u65B9\u6CD5\u6E05\u9664\u6240\u6709\u6210\u5458\uFF0C\u6CA1\u6709\u8FD4\u56DE\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">)</span>

map<span class="token punctuation">.</span>size <span class="token comment">// 2</span>
map<span class="token punctuation">.</span><span class="token function">clear</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span>size <span class="token comment">// 0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u904D\u5386-1" tabindex="-1"><a class="header-anchor" href="#\u904D\u5386-1" aria-hidden="true">#</a> \u904D\u5386</h3><p><code>Map </code>\u7ED3\u6784\u539F\u751F\u63D0\u4F9B\u4E09\u4E2A\u904D\u5386\u5668\u751F\u6210\u51FD\u6570\u548C\u4E00\u4E2A\u904D\u5386\u65B9\u6CD5\uFF1A</p><ul><li>keys()\uFF1A\u8FD4\u56DE\u952E\u540D\u7684\u904D\u5386\u5668</li><li>values()\uFF1A\u8FD4\u56DE\u952E\u503C\u7684\u904D\u5386\u5668</li><li>entries()\uFF1A\u8FD4\u56DE\u6240\u6709\u6210\u5458\u7684\u904D\u5386\u5668</li><li>forEach()\uFF1A\u904D\u5386 Map \u7684\u6240\u6709\u6210\u5458</li></ul><p>\u904D\u5386\u987A\u5E8F\u5C31\u662F\u63D2\u5165\u987A\u5E8F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Map</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token string">&#39;F&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;no&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token string">&#39;T&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;yes&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;F&quot;</span>
<span class="token comment">// &quot;T&quot;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> value <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;no&quot;</span>
<span class="token comment">// &quot;yes&quot;</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> item <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>item<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> item<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;F&quot; &quot;no&quot;</span>
<span class="token comment">// &quot;T&quot; &quot;yes&quot;</span>

<span class="token comment">// \u6216\u8005</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> map<span class="token punctuation">.</span><span class="token function">entries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;F&quot; &quot;no&quot;</span>
<span class="token comment">// &quot;T&quot; &quot;yes&quot;</span>

<span class="token comment">// \u7B49\u540C\u4E8E\u4F7F\u7528map.entries()</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> map<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// &quot;F&quot; &quot;no&quot;</span>
<span class="token comment">// &quot;T&quot; &quot;yes&quot;</span>

map<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">value<span class="token punctuation">,</span> key<span class="token punctuation">,</span> map</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Key: %s, Value: %s&#39;</span><span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E09\u3001weakset-\u548C-weakmap" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001weakset-\u548C-weakmap" aria-hidden="true">#</a> \u4E09\u3001WeakSet \u548C WeakMap</h2><h3 id="weakset" tabindex="-1"><a class="header-anchor" href="#weakset" aria-hidden="true">#</a> WeakSet</h3><p>\u521B\u5EFA<code>WeakSet</code>\u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> ws <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>WeakSet </code>\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u5177\u6709 <code>Iterable </code>\u63A5\u53E3\u7684\u5BF9\u8C61\u4F5C\u4E3A\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token punctuation">[</span>
  <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span>
<span class="token keyword">const</span> ws <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span>
<span class="token comment">// WeakSet {[1, 2], [3, 4]}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728<code>API</code>\u4E2D<code>WeakSet</code>\u4E0E<code>Set</code>\u6709\u4E24\u4E2A\u533A\u522B\uFF1A</p><ul><li>\u6CA1\u6709\u904D\u5386\u64CD\u4F5C\u7684<code>API</code></li><li>\u6CA1\u6709<code>size</code>\u5C5E\u6027</li></ul><p><code>WeakSet</code>\u53EA\u80FD\u6210\u5458\u53EA\u80FD\u662F\u5F15\u7528\u7C7B\u578B\uFF0C\u800C\u4E0D\u80FD\u662F\u5176\u4ED6\u7C7B\u578B\u7684\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> ws <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u6210\u5458\u4E0D\u662F\u5F15\u7528\u7C7B\u578B</span>
<span class="token keyword">let</span> weakSet <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>weakSet<span class="token punctuation">)</span> <span class="token comment">// \u62A5\u9519</span>

<span class="token comment">// \u6210\u5458\u4E3A\u5F15\u7528\u7C7B\u578B</span>
<span class="token keyword">let</span> obj1 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> obj2 <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
<span class="token keyword">let</span> ws <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakSet</span><span class="token punctuation">(</span><span class="token punctuation">[</span>obj1<span class="token punctuation">,</span> obj2<span class="token punctuation">]</span><span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>ws<span class="token punctuation">)</span> <span class="token comment">//WeakSet {{\u2026}, {\u2026}}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>WeakSet </code>\u91CC\u9762\u7684\u5F15\u7528\u53EA\u8981\u5728\u5916\u90E8\u6D88\u5931\uFF0C\u5B83\u5728 <code>WeakSet </code>\u91CC\u9762\u7684\u5F15\u7528\u5C31\u4F1A\u81EA\u52A8\u6D88\u5931</p><h3 id="weakmap" tabindex="-1"><a class="header-anchor" href="#weakmap" aria-hidden="true">#</a> WeakMap</h3><p><code>WeakMap</code>\u7ED3\u6784\u4E0E<code>Map</code>\u7ED3\u6784\u7C7B\u4F3C\uFF0C\u4E5F\u662F\u7528\u4E8E\u751F\u6210\u952E\u503C\u5BF9\u7684\u96C6\u5408</p><p>\u5728<code>API</code>\u4E2D<code>WeakMap</code>\u4E0E<code>Map</code>\u6709\u4E24\u4E2A\u533A\u522B\uFF1A</p><ul><li>\u6CA1\u6709\u904D\u5386\u64CD\u4F5C\u7684<code>API</code></li><li>\u6CA1\u6709<code>clear</code>\u6E05\u7A7A\u65B9\u6CD5</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// WeakMap \u53EF\u4EE5\u4F7F\u7528 set \u65B9\u6CD5\u6DFB\u52A0\u6210\u5458</span>
<span class="token keyword">const</span> wm1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> key <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>
wm1<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
wm1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token comment">// 2</span>

<span class="token comment">// WeakMap \u4E5F\u53EF\u4EE5\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4\uFF0C</span>
<span class="token comment">// \u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u7684\u53C2\u6570</span>
<span class="token keyword">const</span> k1 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> k2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">]</span>
<span class="token keyword">const</span> wm2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token punctuation">[</span>k1<span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>k2<span class="token punctuation">,</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">]</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span>
wm2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>k2<span class="token punctuation">)</span> <span class="token comment">// &quot;bar&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>WeakMap</code>\u53EA\u63A5\u53D7\u5BF9\u8C61\u4F5C\u4E3A\u952E\u540D\uFF08<code>null</code>\u9664\u5916\uFF09\uFF0C\u4E0D\u63A5\u53D7\u5176\u4ED6\u7C7B\u578B\u7684\u503C\u4F5C\u4E3A\u952E\u540D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// TypeError: 1 is not an object!</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// TypeError: Invalid value used as weak map key</span>
map<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>
<span class="token comment">// TypeError: Invalid value used as weak map key</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>WeakMap</code>\u7684\u952E\u540D\u6240\u6307\u5411\u7684\u5BF9\u8C61\uFF0C\u4E00\u65E6\u4E0D\u518D\u9700\u8981\uFF0C\u91CC\u9762\u7684\u952E\u540D\u5BF9\u8C61\u548C\u6240\u5BF9\u5E94\u7684\u952E\u503C\u5BF9\u4F1A\u81EA\u52A8\u6D88\u5931\uFF0C\u4E0D\u7528\u624B\u52A8\u5220\u9664\u5F15\u7528</p><p>\u4E3E\u4E2A\u573A\u666F\u4F8B\u5B50\uFF1A</p><p>\u5728\u7F51\u9875\u7684 DOM \u5143\u7D20\u4E0A\u6DFB\u52A0\u6570\u636E\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528<code>WeakMap</code>\u7ED3\u6784\uFF0C\u5F53\u8BE5 DOM \u5143\u7D20\u88AB\u6E05\u9664\uFF0C\u5176\u6240\u5BF9\u5E94\u7684<code>WeakMap</code>\u8BB0\u5F55\u5C31\u4F1A\u81EA\u52A8\u88AB\u79FB\u9664</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> wm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> element <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;example&#39;</span><span class="token punctuation">)</span>

wm<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>element<span class="token punctuation">,</span> <span class="token string">&#39;some information&#39;</span><span class="token punctuation">)</span>
wm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>element<span class="token punctuation">)</span> <span class="token comment">// &quot;some information&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF1A<code>WeakMap</code> \u5F31\u5F15\u7528\u7684\u53EA\u662F\u952E\u540D\uFF0C\u800C\u4E0D\u662F\u952E\u503C\u3002\u952E\u503C\u4F9D\u7136\u662F\u6B63\u5E38\u5F15\u7528</p><p>\u4E0B\u9762\u4EE3\u7801\u4E2D\uFF0C\u952E\u503C<code>obj</code>\u4F1A\u5728<code>WeakMap</code>\u4EA7\u751F\u65B0\u7684\u5F15\u7528\uFF0C\u5F53\u4F60\u4FEE\u6539<code>obj</code>\u4E0D\u4F1A\u5F71\u54CD\u5230\u5185\u90E8</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> wm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">WeakMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> key <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token keyword">let</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">1</span> <span class="token punctuation">}</span>

wm<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> obj<span class="token punctuation">)</span>
obj <span class="token operator">=</span> <span class="token keyword">null</span>
wm<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>
<span class="token comment">// Object {foo: 1}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,98),o=[t];function c(l,i){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","set_map.html.vue"]]);export{k as default};
