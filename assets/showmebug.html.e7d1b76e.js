import{_ as t,r as p,o as e,c as o,a as n,e as c,w as l,b as s,d as i}from"./app.91a380bb.js";const u={},r=n("h1",{id:"showmebug-\u9762\u8BD5\u9898",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#showmebug-\u9762\u8BD5\u9898","aria-hidden":"true"},"#"),s(" showmebug \u9762\u8BD5\u9898")],-1),k=n("ul",null,[n("li",null,[s("\u5982\u679C"),n("code",null,"a===a"),s("\u662F"),n("code",null,"false"),s(",\u90A3\u4E48\u8BF4\u660E"),n("code",null,"a"),s("\u662F\uFF1F")])],-1),d=s("\u7C7B\u578B\u8F6C\u6362"),v=i(`<div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token number">NaN</span> <span class="token operator">===</span> <span class="token number">NaN</span> <span class="token comment">// false</span>

<span class="token number">Infinity</span> <span class="token operator">===</span> <span class="token number">Infinity</span> <span class="token comment">// true</span>

<span class="token keyword">undefined</span> <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token comment">// true</span>

<span class="token keyword">null</span> <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u6587\u6863\u5B8C\u5168\u52A0\u8F7D\u5E76\u89E3\u6790\u5B8C\u6BD5\u4E4B\u540E\u4F1A\u89E6\u53D1\u4EC0\u4E48\u4E8B\u4EF6\uFF1F</li></ul><p><code>DOMContentLoaded</code>\u4E8B\u4EF6\uFF0C\u5F53 HTML \u6587\u6863\u5B8C\u5168\u89E3\u6790\uFF0C\u4E14\u6240\u6709\u5EF6\u8FDF\u811A\u672C<code>&lt;script defer src=&quot;\u2026&quot;&gt;</code> \u548C <code>&lt;script type=&quot;module&quot;&gt;</code>\u4E0B\u8F7D\u548C\u6267\u884C\u5B8C\u6BD5\u540E\uFF0C\u4F1A\u89E6\u53D1 <code>DOMContentLoaded</code> \u4E8B\u4EF6\u3002\u5B83\u4E0D\u4F1A\u7B49\u5F85\u56FE\u7247\u3001\u5B50\u6846\u67B6\u548C\u5F02\u6B65\u811A\u672C\u7B49\u5176\u4ED6\u5185\u5BB9\u5B8C\u6210\u52A0\u8F7D\u3002</p><p><code>DOMContentLoaded</code> \u4E0D\u4F1A\u7B49\u5F85\u6837\u5F0F\u8868\u52A0\u8F7D\uFF0C\u4F46\u5EF6\u8FDF\u811A\u672C\u4F1A\u7B49\u5F85\u6837\u5F0F\u8868\uFF0C\u800C\u4E14 <code>DOMContentLoaded</code> \u4E8B\u4EF6\u6392\u5728\u5EF6\u8FDF\u811A\u672C\u4E4B\u540E\u3002\u6B64\u5916\uFF0C\u975E\u5EF6\u8FDF\u6216\u5F02\u6B65\u7684\u811A\u672C\u5982<code>&lt;script&gt;</code>\u5C06\u7B49\u5F85\u5DF2\u89E3\u6790\u7684\u6837\u5F0F\u8868\u52A0\u8F7D\u3002</p><ul><li>\u72B6\u6001\u7801403</li></ul><p>\u72B6\u6001\u7801 <code>403 Forbidden</code> \u4EE3\u8868\u5BA2\u6237\u7AEF\u9519\u8BEF\uFF0C\u6307\u7684\u662F\u670D\u52A1\u5668\u7AEF\u6709\u80FD\u529B\u5904\u7406\u8BE5\u8BF7\u6C42\uFF0C\u4F46\u662F\u62D2\u7EDD\u6388\u6743\u8BBF\u95EE</p><ul><li>\u5B9E\u73B0\u7B80\u5355\u7684\u865A\u62DF DOM \u6E32\u67D3</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> domNode <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">tagName</span><span class="token operator">:</span> <span class="token string">&quot;ul&quot;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">props</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token keyword">class</span><span class="token operator">:</span> <span class="token string">&quot;list&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">tagName</span><span class="token operator">:</span> <span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;item1&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">tagName</span><span class="token operator">:</span> <span class="token string">&quot;li&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;item2&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-html ext-html line-numbers-mode"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>list<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>item1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">&gt;</span></span>item2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">render</span><span class="token punctuation">(</span><span class="token parameter">domNode</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// \u8FD4\u56DE\u7A7A</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>domNode<span class="token punctuation">)</span> <span class="token keyword">return</span> document<span class="token punctuation">.</span><span class="token function">createDocumentFragment</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">let</span> $el <span class="token operator">=</span> <span class="token keyword">null</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> domNode <span class="token operator">===</span> <span class="token string">&#39;object&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    $el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createElement</span><span class="token punctuation">(</span>domNode<span class="token punctuation">.</span>tagName<span class="token punctuation">)</span>
    <span class="token comment">// \u6DFB\u52A0\u5C5E\u6027</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>domNode<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;props&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> key <span class="token keyword">in</span> domNode<span class="token punctuation">.</span>props<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        $el<span class="token punctuation">.</span><span class="token function">setAttribute</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> domNode<span class="token punctuation">.</span>props<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
    <span class="token comment">// \u6DFB\u52A0\u5B50\u5143\u7D20</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>domNode<span class="token punctuation">.</span><span class="token function">hasOwnProperty</span><span class="token punctuation">(</span><span class="token string">&#39;children&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      domNode<span class="token punctuation">.</span>children<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u9012\u5F52\u8C03\u7528render</span>
        <span class="token keyword">const</span> $childEl <span class="token operator">=</span> <span class="token function">render</span><span class="token punctuation">(</span>val<span class="token punctuation">)</span>
        <span class="token comment">// \u5C06\u5B50\u5143\u7D20\u6DFB\u52A0\u5230\u7236\u5143\u7D20\u4E0B</span>
        $el<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>$childEl<span class="token punctuation">)</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0D\u5305\u542B \u5B50\u5143\u7D20\u6807\u7B7E \u76F4\u63A5 \u5199\u5165\u6587\u672C</span>
    $el <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">createTextNode</span><span class="token punctuation">(</span>domNode<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> $el
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u7ED9\u5B9A\u4EC5\u5305\u542B2-9\u7684\u5B57\u7B26\u4E32\uFF0C\u8FD4\u56DE\u6240\u6709\u80FD\u8868\u793A\u7684\u5B57\u6BCD\u7EC4\u5408\uFF0C\u6570\u5B57\u4E0E\u5B57\u6BCD\u6620\u5C04\u4E0E\u7535\u8BDD\u6309\u952E\u76F8\u540C</li></ul><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">letterCombinations</span><span class="token punctuation">(</span>digits<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>digits<span class="token punctuation">.</span>length <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> res<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> map<span class="token operator">:</span> Record<span class="token operator">&lt;</span><span class="token builtin">any</span><span class="token punctuation">,</span> <span class="token builtin">string</span><span class="token operator">&gt;</span> <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string-property property">&quot;2&quot;</span><span class="token operator">:</span> <span class="token string">&quot;abc&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;3&quot;</span><span class="token operator">:</span> <span class="token string">&quot;def&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;4&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ghi&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;5&quot;</span><span class="token operator">:</span> <span class="token string">&quot;jkl&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;6&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mno&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;7&quot;</span><span class="token operator">:</span> <span class="token string">&quot;pqrs&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;8&quot;</span><span class="token operator">:</span> <span class="token string">&quot;tuv&quot;</span><span class="token punctuation">,</span>
    <span class="token string-property property">&quot;9&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wxyz&quot;</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">dfs</span> <span class="token operator">=</span> <span class="token punctuation">(</span>curStr<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> i<span class="token operator">:</span> <span class="token builtin">number</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> digits<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>curStr<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> letter <span class="token operator">=</span> map<span class="token punctuation">[</span>digits<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> val <span class="token keyword">of</span> letter<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">dfs</span><span class="token punctuation">(</span>val <span class="token operator">+</span> curStr<span class="token punctuation">,</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token function">dfs</span><span class="token punctuation">(</span><span class="token string">&quot;&quot;</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">letterCombinations</span><span class="token punctuation">(</span><span class="token string">&quot;23&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><p>evevt loop \u539F\u7406\u63CF\u8FF0\uFF0C\u5E76\u901A\u8FC7\u4F2A\u4EE3\u7801\u4E3E\u4F8B</p></li><li><p>import \u548C require \u6709\u4EC0\u4E48\u533A\u522B\uFF1Fa.js b.js a\u8C03\u7528b,b\u8C03\u7528a,\u4F1A\u51FA\u73B0\u6B7B\u5FAA\u73AF\u5417\uFF1F\u4E3A\u4EC0\u4E48\uFF1F</p></li></ul><p>CommonJS\u548CES Module\u90FD\u5BF9\u5FAA\u73AF\u5F15\u5165\u505A\u4E86\u5904\u7406\uFF0C\u4E0D\u4F1A\u8FDB\u5165\u6B7B\u5FAA\u73AF\uFF0C\u4F46\u65B9\u5F0F\u4E0D\u540C\uFF1A</p><ul><li>CommonJS\u501F\u52A9\u6A21\u5757\u7F13\u5B58\uFF0C\u9047\u5230require\u51FD\u6570\u4F1A\u5148\u68C0\u67E5\u662F\u5426\u6709\u7F13\u5B58\uFF0C\u5DF2\u7ECF\u6709\u7684\u5219\u4E0D\u4F1A\u8FDB\u5165\u6267\u884C\uFF0C\u5728\u6A21\u5757\u7F13\u5B58\u4E2D\u8FD8\u8BB0\u5F55\u7740\u5BFC\u51FA\u7684\u53D8\u91CF\u7684\u62F7\u8D1D\u503C\uFF1B</li><li>ES Module\u501F\u52A9\u6A21\u5757\u5730\u56FE\uFF0C\u5DF2\u7ECF\u8FDB\u5165\u8FC7\u7684\u6A21\u5757\u6807\u6CE8\u4E3A\u83B7\u53D6\u4E2D\uFF0C\u9047\u5230import\u8BED\u53E5\u4F1A\u53BB\u68C0\u67E5\u8FD9\u4E2A\u5730\u56FE\uFF0C\u5DF2\u7ECF\u6807\u6CE8\u4E3A\u83B7\u53D6\u4E2D\u7684\u5219\u4E0D\u4F1A\u8FDB\u5165\uFF0C\u5730\u56FE\u4E2D\u7684\u6BCF\u4E00\u4E2A\u8282\u70B9\u662F\u4E00\u4E2A\u6A21\u5757\u8BB0\u5F55\uFF0C\u4E0A\u9762\u6709\u5BFC\u51FA\u53D8\u91CF\u7684\u5185\u5B58\u5730\u5740\uFF0C\u5BFC\u5165\u65F6\u4F1A\u505A\u4E00\u4E2A\u8FDE\u63A5\u2014\u2014\u5373\u6307\u5411\u540C\u4E00\u5757\u5185\u5B58\u3002</li></ul>`,15);function m(b,g){const a=p("RouterLink");return e(),o("div",null,[r,k,n("p",null,[c(a,{to:"/js/type_conversion.html"},{default:l(()=>[d]),_:1})]),v])}const q=t(u,[["render",m],["__file","showmebug.html.vue"]]);export{q as default};
