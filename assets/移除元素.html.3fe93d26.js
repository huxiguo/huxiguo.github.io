import{_ as n,o as s,c as a,d as p}from"./app.91a380bb.js";const t={},e=p(`<h1 id="\u79FB\u9664\u5143\u7D20" tabindex="-1"><a class="header-anchor" href="#\u79FB\u9664\u5143\u7D20" aria-hidden="true">#</a> \u79FB\u9664\u5143\u7D20</h1><p>\u7ED9\u4F60\u4E00\u4E2A\u6570\u7EC4 <code>nums</code> \u548C\u4E00\u4E2A\u503C <code>val</code>\uFF0C\u4F60\u9700\u8981 <em>\u539F\u5730</em> \u79FB\u9664\u6240\u6709\u6570\u503C\u7B49\u4E8E <code>val</code> \u7684\u5143\u7D20\uFF0C\u5E76\u8FD4\u56DE\u79FB\u9664\u540E\u6570\u7EC4\u7684\u65B0\u957F\u5EA6\u3002</p><p>\u4E0D\u8981\u4F7F\u7528\u989D\u5916\u7684\u6570\u7EC4\u7A7A\u95F4\uFF0C\u4F60\u5FC5\u987B\u4EC5\u4F7F\u7528 <code>O(1)</code> \u989D\u5916\u7A7A\u95F4\u5E76 <em>\u539F\u5730</em> \u4FEE\u6539\u8F93\u5165\u6570\u7EC4\u3002</p><p>\u5143\u7D20\u7684\u987A\u5E8F\u53EF\u4EE5\u6539\u53D8\u3002\u4F60\u4E0D\u9700\u8981\u8003\u8651\u6570\u7EC4\u4E2D\u8D85\u51FA\u65B0\u957F\u5EA6\u540E\u9762\u7684\u5143\u7D20\u3002</p><ul><li>\u4F7F\u7528\u53D8\u91CF\u8BB0\u5F55\u6570\u7EC4\u7684\u4E0B\u6807\u4F4D\u7F6E\uFF0C\u904D\u5386\u6570\u7EC4\uFF0C\u6BD4\u8F83\u5F53\u524D\u4E0B\u6807\u4F4D\u7F6E\u548Cval\u662F\u5426\u76F8\u540C\uFF0C\u4E0D\u76F8\u540C\u5219\u5C06\u5F53\u524D\u503C\u8D4B\u503C\u7ED9\u53D8\u91CF\u8BB0\u5F55\u7684\u4E0B\u6807\u4F4D\u7F6E</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">removeElement</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> idx <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">!==</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      nums<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>
      idx<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> idx<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>\u5DE6\u53F3\u6307\u9488\uFF0C\u5206\u522B\u6307\u5411\u9996\u5C3E\uFF0C\u5F53\u5DE6\u6307\u9488\u7684\u503C\u548Cval\u76F8\u540C\u65F6\u5C31\u5C06\u53F3\u6307\u9488\u7684\u503C\u8D4B\u503C\u7ED9\u5DE6\u6307\u9488\uFF0C\u5FAA\u73AF\u76F4\u5230\u5DE6\u53F3\u91CD\u5408\u65F6\u904D\u5386\u5B8C\u6BD5\u6570\u7EC4</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> <span class="token function-variable function">removeElement</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">nums<span class="token punctuation">,</span> val</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> left <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">let</span> right <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>left <span class="token operator">&gt;</span> right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">===</span> val<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      nums<span class="token punctuation">[</span>left<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>right <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
      right<span class="token operator">++</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      left<span class="token operator">++</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> left
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[e];function c(l,i){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","\u79FB\u9664\u5143\u7D20.html.vue"]]);export{r as default};
