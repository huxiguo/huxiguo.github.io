import{_ as n,o as s,c as a,d as t}from"./app.91a380bb.js";const p={},e=t(`<h1 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> promise</h1><h2 id="\u4E00\u3001\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u4ECB\u7ECD" aria-hidden="true">#</a> \u4E00\u3001\u4ECB\u7ECD</h2><p><code>Promise </code>\uFF0C\u8BD1\u4E3A\u627F\u8BFA\uFF0C\u662F\u5F02\u6B65\u7F16\u7A0B\u7684\u4E00\u79CD\u89E3\u51B3\u65B9\u6848\uFF0C\u6BD4\u4F20\u7EDF\u7684\u89E3\u51B3\u65B9\u6848\uFF08\u56DE\u8C03\u51FD\u6570\uFF09\u66F4\u52A0\u5408\u7406\u548C\u66F4\u52A0\u5F3A\u5927</p><p>\u5728\u4EE5\u5F80\u6211\u4EEC\u5982\u679C\u5904\u7406\u591A\u5C42\u5F02\u6B65\u64CD\u4F5C\uFF0C\u6211\u4EEC\u5F80\u5F80\u4F1A\u50CF\u4E0B\u9762\u90A3\u6837\u7F16\u5199\u6211\u4EEC\u7684\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>
    result<span class="token punctuation">,</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newResult</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">doThirdThing</span><span class="token punctuation">(</span>
        newResult<span class="token punctuation">,</span>
        <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">finalResult</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F97\u5230\u6700\u7EC8\u7ED3\u679C: &quot;</span> <span class="token operator">+</span> finalResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span>
        failureCallback
      <span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    failureCallback
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u9605\u8BFB\u4E0A\u9762\u4EE3\u7801\uFF0C\u662F\u4E0D\u662F\u5F88\u96BE\u53D7\uFF0C\u4E0A\u8FF0\u5F62\u6210\u4E86\u7ECF\u5178\u7684\u56DE\u8C03\u5730\u72F1</p><p>\u73B0\u5728\u901A\u8FC7<code>Promise</code>\u7684\u6539\u5199\u4E0A\u9762\u7684\u4EE3\u7801</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">doSomethingElse</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">newResult</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">doThirdThing</span><span class="token punctuation">(</span>newResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">finalResult</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u5F97\u5230\u6700\u7EC8\u7ED3\u679C: &quot;</span> <span class="token operator">+</span> finalResult<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>failureCallback<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u77AC\u95F4\u611F\u53D7\u5230<code>promise</code>\u89E3\u51B3\u5F02\u6B65\u64CD\u4F5C\u7684\u4F18\u70B9\uFF1A</p><ul><li>\u94FE\u5F0F\u64CD\u4F5C\u51CF\u4F4E\u4E86\u7F16\u7801\u96BE\u5EA6</li><li>\u4EE3\u7801\u53EF\u8BFB\u6027\u660E\u663E\u589E\u5F3A</li></ul><p>\u4E0B\u9762\u6211\u4EEC\u6B63\u5F0F\u6765\u8BA4\u8BC6<code>promise</code>\uFF1A</p><h3 id="\u72B6\u6001" tabindex="-1"><a class="header-anchor" href="#\u72B6\u6001" aria-hidden="true">#</a> \u72B6\u6001</h3><p><code>promise</code>\u5BF9\u8C61\u4EC5\u6709\u4E09\u79CD\u72B6\u6001</p><ul><li><code>pending</code>\uFF08\u8FDB\u884C\u4E2D\uFF09</li><li><code>fulfilled</code>\uFF08\u5DF2\u6210\u529F\uFF09</li><li><code>rejected</code>\uFF08\u5DF2\u5931\u8D25\uFF09</li></ul><h3 id="\u7279\u70B9" tabindex="-1"><a class="header-anchor" href="#\u7279\u70B9" aria-hidden="true">#</a> \u7279\u70B9</h3><ul><li>\u5BF9\u8C61\u7684\u72B6\u6001\u4E0D\u53D7\u5916\u754C\u5F71\u54CD\uFF0C\u53EA\u6709\u5F02\u6B65\u64CD\u4F5C\u7684\u7ED3\u679C\uFF0C\u53EF\u4EE5\u51B3\u5B9A\u5F53\u524D\u662F\u54EA\u4E00\u79CD\u72B6\u6001</li><li>\u4E00\u65E6\u72B6\u6001\u6539\u53D8\uFF08\u4ECE<code>pending</code>\u53D8\u4E3A<code>fulfilled</code>\u548C\u4ECE<code>pending</code>\u53D8\u4E3A<code>rejected</code>\uFF09\uFF0C\u5C31\u4E0D\u4F1A\u518D\u53D8\uFF0C\u4EFB\u4F55\u65F6\u5019\u90FD\u53EF\u4EE5\u5F97\u5230\u8FD9\u4E2A\u7ED3\u679C</li></ul><h3 id="\u6D41\u7A0B" tabindex="-1"><a class="header-anchor" href="#\u6D41\u7A0B" aria-hidden="true">#</a> \u6D41\u7A0B</h3><p>\u8BA4\u771F\u9605\u8BFB\u4E0B\u56FE\uFF0C\u6211\u4EEC\u80FD\u591F\u8F7B\u677E\u4E86\u89E3<code>promise</code>\u6574\u4E2A\u6D41\u7A0B</p><p><img src="https://static.vue-js.com/1b02ae90-58a9-11eb-85f6-6fac77c0c9b3.png" alt=""></p><h2 id="\u4E8C\u3001\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u7528\u6CD5" aria-hidden="true">#</a> \u4E8C\u3001\u7528\u6CD5</h2><p><code>Promise</code>\u5BF9\u8C61\u662F\u4E00\u4E2A\u6784\u9020\u51FD\u6570\uFF0C\u7528\u6765\u751F\u6210<code>Promise</code>\u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promise <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><code>Promise</code>\u6784\u9020\u51FD\u6570\u63A5\u53D7\u4E00\u4E2A\u51FD\u6570\u4F5C\u4E3A\u53C2\u6570\uFF0C\u8BE5\u51FD\u6570\u7684\u4E24\u4E2A\u53C2\u6570\u5206\u522B\u662F<code>resolve</code>\u548C<code>reject</code></p><ul><li><code>resolve</code>\u51FD\u6570\u7684\u4F5C\u7528\u662F\uFF0C\u5C06<code>Promise</code>\u5BF9\u8C61\u7684\u72B6\u6001\u4ECE\u201C\u672A\u5B8C\u6210\u201D\u53D8\u4E3A\u201C\u6210\u529F\u201D</li><li><code>reject</code>\u51FD\u6570\u7684\u4F5C\u7528\u662F\uFF0C\u5C06<code>Promise</code>\u5BF9\u8C61\u7684\u72B6\u6001\u4ECE\u201C\u672A\u5B8C\u6210\u201D\u53D8\u4E3A\u201C\u5931\u8D25\u201D</li></ul><h3 id="\u5B9E\u4F8B\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B\u65B9\u6CD5" aria-hidden="true">#</a> \u5B9E\u4F8B\u65B9\u6CD5</h3><p><code>Promise</code>\u6784\u5EFA\u51FA\u6765\u7684\u5B9E\u4F8B\u5B58\u5728\u4EE5\u4E0B\u65B9\u6CD5\uFF1A</p><ul><li>then()</li><li>catch()</li><li>finally()</li></ul><h4 id="then" tabindex="-1"><a class="header-anchor" href="#then" aria-hidden="true">#</a> then()</h4><p><code>then</code>\u662F\u5B9E\u4F8B\u72B6\u6001\u53D1\u751F\u6539\u53D8\u65F6\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u662F<code>resolved</code>\u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570\uFF0C\u7B2C\u4E8C\u4E2A\u53C2\u6570\u662F<code>rejected</code>\u72B6\u6001\u7684\u56DE\u8C03\u51FD\u6570</p><p><code>then</code>\u65B9\u6CD5\u8FD4\u56DE\u7684\u662F\u4E00\u4E2A\u65B0\u7684<code>Promise</code>\u5B9E\u4F8B\uFF0C\u4E5F\u5C31\u662F<code>promise</code>\u80FD\u94FE\u5F0F\u4E66\u5199\u7684\u539F\u56E0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/posts.json&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">json</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> json<span class="token punctuation">.</span>post<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="catch" tabindex="-1"><a class="header-anchor" href="#catch" aria-hidden="true">#</a> catch</h4><p><code>catch()</code>\u65B9\u6CD5\u662F<code>.then(null, rejection)</code>\u6216<code>.then(undefined, rejection)</code>\u7684\u522B\u540D\uFF0C\u7528\u4E8E\u6307\u5B9A\u53D1\u751F\u9519\u8BEF\u65F6\u7684\u56DE\u8C03\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/posts.json&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">posts</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// ...</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5904\u7406 getJSON \u548C \u524D\u4E00\u4E2A\u56DE\u8C03\u51FD\u6570\u8FD0\u884C\u65F6\u53D1\u751F\u7684\u9519\u8BEF</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;\u53D1\u751F\u9519\u8BEF\uFF01&quot;</span><span class="token punctuation">,</span> error<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Promise </code>\u5BF9\u8C61\u7684\u9519\u8BEF\u5177\u6709\u201C\u5192\u6CE1\u201D\u6027\u8D28\uFF0C\u4F1A\u4E00\u76F4\u5411\u540E\u4F20\u9012\uFF0C\u76F4\u5230\u88AB\u6355\u83B7\u4E3A\u6B62</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token function">getJSON</span><span class="token punctuation">(</span><span class="token string">&quot;/post/1.json&quot;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">post</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token function">getJSON</span><span class="token punctuation">(</span>post<span class="token punctuation">.</span>commentURL<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">comments</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// some code</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u5904\u7406\u524D\u9762\u4E09\u4E2APromise\u4EA7\u751F\u7684\u9519\u8BEF</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E00\u822C\u6765\u8BF4\uFF0C\u4F7F\u7528<code>catch</code>\u65B9\u6CD5\u4EE3\u66FF<code>then()</code>\u7B2C\u4E8C\u4E2A\u53C2\u6570</p><p><code>Promise </code>\u5BF9\u8C61\u629B\u51FA\u7684\u9519\u8BEF\u4E0D\u4F1A\u4F20\u9012\u5230\u5916\u5C42\u4EE3\u7801\uFF0C\u5373\u4E0D\u4F1A\u6709\u4EFB\u4F55\u53CD\u5E94</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">someAsyncThing</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// \u4E0B\u9762\u4E00\u884C\u4F1A\u62A5\u9519\uFF0C\u56E0\u4E3Ax\u6CA1\u6709\u58F0\u660E</span>
    <span class="token function">resolve</span><span class="token punctuation">(</span>x <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D4F\u89C8\u5668\u8FD0\u884C\u5230\u8FD9\u4E00\u884C\uFF0C\u4F1A\u6253\u5370\u51FA\u9519\u8BEF\u63D0\u793A<code>ReferenceError: x is not defined</code>\uFF0C\u4F46\u662F\u4E0D\u4F1A\u9000\u51FA\u8FDB\u7A0B</p><p><code>catch()</code>\u65B9\u6CD5\u4E4B\u4E2D\uFF0C\u8FD8\u80FD\u518D\u629B\u51FA\u9519\u8BEF\uFF0C\u901A\u8FC7\u540E\u9762<code>catch</code>\u65B9\u6CD5\u6355\u83B7\u5230</p><h4 id="finally" tabindex="-1"><a class="header-anchor" href="#finally" aria-hidden="true">#</a> finally()</h4><p><code>finally()</code>\u65B9\u6CD5\u7528\u4E8E\u6307\u5B9A\u4E0D\u7BA1 Promise \u5BF9\u8C61\u6700\u540E\u72B6\u6001\u5982\u4F55\uFF0C\u90FD\u4F1A\u6267\u884C\u7684\u64CD\u4F5C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>promise
<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">result</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">error</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">.</span><span class="token function">finally</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\xB7\xB7\xB7<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u6784\u9020\u51FD\u6570\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u6784\u9020\u51FD\u6570\u65B9\u6CD5" aria-hidden="true">#</a> \u6784\u9020\u51FD\u6570\u65B9\u6CD5</h3><p><code>Promise</code>\u6784\u9020\u51FD\u6570\u5B58\u5728\u4EE5\u4E0B\u65B9\u6CD5\uFF1A</p><ul><li>all()</li><li>race()</li><li>allSettled()</li><li>resolve()</li><li>reject()</li><li>try()</li></ul><h3 id="all" tabindex="-1"><a class="header-anchor" href="#all" aria-hidden="true">#</a> all()</h3><p><code>Promise.all()</code>\u65B9\u6CD5\u7528\u4E8E\u5C06\u591A\u4E2A <code>Promise </code>\u5B9E\u4F8B\uFF0C\u5305\u88C5\u6210\u4E00\u4E2A\u65B0\u7684 <code>Promise </code>\u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u63A5\u53D7\u4E00\u4E2A\u6570\u7EC4\uFF08\u8FED\u4EE3\u5BF9\u8C61\uFF09\u4F5C\u4E3A\u53C2\u6570\uFF0C\u6570\u7EC4\u6210\u5458\u90FD\u5E94\u4E3A<code>Promise</code>\u5B9E\u4F8B</p><p>\u5B9E\u4F8B<code>p</code>\u7684\u72B6\u6001\u7531<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u51B3\u5B9A\uFF0C\u5206\u4E3A\u4E24\u79CD\uFF1A</p><ul><li>\u53EA\u6709<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u7684\u72B6\u6001\u90FD\u53D8\u6210<code>fulfilled</code>\uFF0C<code>p</code>\u7684\u72B6\u6001\u624D\u4F1A\u53D8\u6210<code>fulfilled</code>\uFF0C\u6B64\u65F6<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u7684\u8FD4\u56DE\u503C\u7EC4\u6210\u4E00\u4E2A\u6570\u7EC4\uFF0C\u4F20\u9012\u7ED9<code>p</code>\u7684\u56DE\u8C03\u51FD\u6570</li><li>\u53EA\u8981<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u4E4B\u4E2D\u6709\u4E00\u4E2A\u88AB<code>rejected</code>\uFF0C<code>p</code>\u7684\u72B6\u6001\u5C31\u53D8\u6210<code>rejected</code>\uFF0C\u6B64\u65F6\u7B2C\u4E00\u4E2A\u88AB<code>reject</code>\u7684\u5B9E\u4F8B\u7684\u8FD4\u56DE\u503C\uFF0C\u4F1A\u4F20\u9012\u7ED9<code>p</code>\u7684\u56DE\u8C03\u51FD\u6570</li></ul><p>\u6CE8\u610F\uFF0C\u5982\u679C\u4F5C\u4E3A\u53C2\u6570\u7684 <code>Promise</code> \u5B9E\u4F8B\uFF0C\u81EA\u5DF1\u5B9A\u4E49\u4E86<code>catch</code>\u65B9\u6CD5\uFF0C\u90A3\u4E48\u5B83\u4E00\u65E6\u88AB<code>rejected</code>\uFF0C\u5E76\u4E0D\u4F1A\u89E6\u53D1<code>Promise.all()</code>\u7684<code>catch</code>\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u62A5\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// [&quot;hello&quot;, Error: \u62A5\u9519\u4E86]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C<code>p2</code>\u6CA1\u6709\u81EA\u5DF1\u7684<code>catch</code>\u65B9\u6CD5\uFF0C\u5C31\u4F1A\u8C03\u7528<code>Promise.all()</code>\u7684<code>catch</code>\u65B9\u6CD5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;\u62A5\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>

Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">result</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// Error: \u62A5\u9519\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="race" tabindex="-1"><a class="header-anchor" href="#race" aria-hidden="true">#</a> race()</h3><p><code>Promise.race()</code>\u65B9\u6CD5\u540C\u6837\u662F\u5C06\u591A\u4E2A Promise \u5B9E\u4F8B\uFF0C\u5305\u88C5\u6210\u4E00\u4E2A\u65B0\u7684 Promise \u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>p1<span class="token punctuation">,</span> p2<span class="token punctuation">,</span> p3<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u53EA\u8981<code>p1</code>\u3001<code>p2</code>\u3001<code>p3</code>\u4E4B\u4E2D\u6709\u4E00\u4E2A\u5B9E\u4F8B\u7387\u5148\u6539\u53D8\u72B6\u6001\uFF0C<code>p</code>\u7684\u72B6\u6001\u5C31\u8DDF\u7740\u6539\u53D8</p><p>\u7387\u5148\u6539\u53D8\u7684 Promise \u5B9E\u4F8B\u7684\u8FD4\u56DE\u503C\u5219\u4F20\u9012\u7ED9<code>p</code>\u7684\u56DE\u8C03\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
  <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/resource-that-may-take-a-while&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">&quot;request timeout&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>log<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>console<span class="token punctuation">.</span>error<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="allsettled" tabindex="-1"><a class="header-anchor" href="#allsettled" aria-hidden="true">#</a> allSettled()</h3><p><code>Promise.allSettled()</code>\u65B9\u6CD5\u63A5\u53D7\u4E00\u7EC4 Promise \u5B9E\u4F8B\u4F5C\u4E3A\u53C2\u6570\uFF0C\u5305\u88C5\u6210\u4E00\u4E2A\u65B0\u7684 Promise \u5B9E\u4F8B</p><p>\u53EA\u6709\u7B49\u5230\u6240\u6709\u8FD9\u4E9B\u53C2\u6570\u5B9E\u4F8B\u90FD\u8FD4\u56DE\u7ED3\u679C\uFF0C\u4E0D\u7BA1\u662F<code>fulfilled</code>\u8FD8\u662F<code>rejected</code>\uFF0C\u5305\u88C5\u5B9E\u4F8B\u624D\u4F1A\u7ED3\u675F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> promises <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/api-1&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/api-2&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&quot;/api-3&quot;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>

<span class="token keyword">await</span> Promise<span class="token punctuation">.</span><span class="token function">allSettled</span><span class="token punctuation">(</span>promises<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token function">removeLoadingIndicator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="resolve" tabindex="-1"><a class="header-anchor" href="#resolve" aria-hidden="true">#</a> resolve()</h4><p>\u5C06\u73B0\u6709\u5BF9\u8C61\u8F6C\u4E3A <code>Promise </code>\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u4EF7\u4E8E</span>
<span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">&quot;foo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u53C2\u6570\u53EF\u4EE5\u5206\u6210\u56DB\u79CD\u60C5\u51B5\uFF0C\u5206\u522B\u5982\u4E0B\uFF1A</p><ul><li>\u53C2\u6570\u662F\u4E00\u4E2A Promise \u5B9E\u4F8B\uFF0C<code>promise.resolve</code>\u5C06\u4E0D\u505A\u4EFB\u4F55\u4FEE\u6539\u3001\u539F\u5C01\u4E0D\u52A8\u5730\u8FD4\u56DE\u8FD9\u4E2A\u5B9E\u4F8B</li><li>\u53C2\u6570\u662F\u4E00\u4E2A<code>thenable</code>\u5BF9\u8C61\uFF0C<code>promise.resolve</code>\u4F1A\u5C06\u8FD9\u4E2A\u5BF9\u8C61\u8F6C\u4E3A <code>Promise </code>\u5BF9\u8C61\uFF0C\u7136\u540E\u5C31\u7ACB\u5373\u6267\u884C<code>thenable</code>\u5BF9\u8C61\u7684<code>then()</code>\u65B9\u6CD5</li><li>\u53C2\u6570\u4E0D\u662F\u5177\u6709<code>then()</code>\u65B9\u6CD5\u7684\u5BF9\u8C61\uFF0C\u6216\u6839\u672C\u5C31\u4E0D\u662F\u5BF9\u8C61\uFF0C<code>Promise.resolve()</code>\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Promise \u5BF9\u8C61\uFF0C\u72B6\u6001\u4E3A<code>resolved</code></li><li>\u6CA1\u6709\u53C2\u6570\u65F6\uFF0C\u76F4\u63A5\u8FD4\u56DE\u4E00\u4E2A<code>resolved</code>\u72B6\u6001\u7684 Promise \u5BF9\u8C61</li></ul><h4 id="reject" tabindex="-1"><a class="header-anchor" href="#reject" aria-hidden="true">#</a> reject()</h4><p><code>Promise.reject(reason)</code>\u65B9\u6CD5\u4E5F\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u65B0\u7684 Promise \u5B9E\u4F8B\uFF0C\u8BE5\u5B9E\u4F8B\u7684\u72B6\u6001\u4E3A<code>rejected</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> p <span class="token operator">=</span> Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u7B49\u540C\u4E8E</span>
<span class="token keyword">const</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

p<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">s</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// \u51FA\u9519\u4E86</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Promise.reject()</code>\u65B9\u6CD5\u7684\u53C2\u6570\uFF0C\u4F1A\u539F\u5C01\u4E0D\u52A8\u5730\u53D8\u6210\u540E\u7EED\u65B9\u6CD5\u7684\u53C2\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>Promise<span class="token punctuation">.</span><span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">e</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>e <span class="token operator">===</span> <span class="token string">&quot;\u51FA\u9519\u4E86&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E09\u3001\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u4E09\u3001\u4F7F\u7528\u573A\u666F</h2><p>\u5C06\u56FE\u7247\u7684\u52A0\u8F7D\u5199\u6210\u4E00\u4E2A<code>Promise</code>\uFF0C\u4E00\u65E6\u52A0\u8F7D\u5B8C\u6210\uFF0C<code>Promise</code>\u7684\u72B6\u6001\u5C31\u53D1\u751F\u53D8\u5316</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">preloadImage</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">path</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> image <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>onload <span class="token operator">=</span> resolve<span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>onerror <span class="token operator">=</span> reject<span class="token punctuation">;</span>
    image<span class="token punctuation">.</span>src <span class="token operator">=</span> path<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7\u94FE\u5F0F\u64CD\u4F5C\uFF0C\u5C06\u591A\u4E2A\u6E32\u67D3\u6570\u636E\u5206\u522B\u7ED9\u4E2A<code>then</code>\uFF0C\u8BA9\u5176\u5404\u53F8\u5176\u804C\u3002\u6216\u5F53\u4E0B\u4E2A\u5F02\u6B65\u8BF7\u6C42\u4F9D\u8D56\u4E0A\u4E2A\u8BF7\u6C42\u7ED3\u679C\u7684\u65F6\u5019\uFF0C\u6211\u4EEC\u4E5F\u80FD\u591F\u901A\u8FC7\u94FE\u5F0F\u64CD\u4F5C\u53CB\u597D\u89E3\u51B3\u95EE\u9898</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// \u5404\u53F8\u5176\u804C</span>
<span class="token function">getInfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> bannerList <span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">;</span>
    <span class="token comment">//\u6E32\u67D3\u8F6E\u64AD\u56FE</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bannerList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> storeList <span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">;</span>
    <span class="token comment">//\u6E32\u67D3\u5E97\u94FA\u5217\u8868</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>storeList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> <span class="token punctuation">{</span> categoryList <span class="token punctuation">}</span> <span class="token operator">=</span> res<span class="token punctuation">;</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>categoryList<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment">//\u6E32\u67D3\u5206\u7C7B\u5217\u8868</span>
    <span class="token keyword">return</span> res<span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7<code>all()</code>\u5B9E\u73B0\u591A\u4E2A\u8BF7\u6C42\u5408\u5E76\u5728\u4E00\u8D77\uFF0C\u6C47\u603B\u6240\u6709\u8BF7\u6C42\u7ED3\u679C\uFF0C\u53EA\u9700\u8BBE\u7F6E\u4E00\u4E2A<code>loading</code>\u5373\u53EF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">initLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// loading.show() //\u52A0\u8F7Dloading</span>
  Promise<span class="token punctuation">.</span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">getBannerList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getStoreList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">getCategoryList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">res</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">;</span>
      loading<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5173\u95EDloading</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      loading<span class="token punctuation">.</span><span class="token function">hide</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u5173\u95EDloading</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
<span class="token comment">//\u6570\u636E\u521D\u59CB\u5316</span>
<span class="token function">initLoad</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7<code>race</code>\u53EF\u4EE5\u8BBE\u7F6E\u56FE\u7247\u8BF7\u6C42\u8D85\u65F6</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">//\u8BF7\u6C42\u67D0\u4E2A\u56FE\u7247\u8D44\u6E90</span>
<span class="token keyword">function</span> <span class="token function">requestImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">var</span> img <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Image</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    img<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>img<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">;</span>
    <span class="token comment">//img.src = &quot;https://b-gold-cdn.xitu.io/v3/static/img/logo.a7995ad.svg&quot;; \u6B63\u786E\u7684</span>
    img<span class="token punctuation">.</span>src <span class="token operator">=</span> <span class="token string">&quot;https://b-gold-cdn.xitu.io/v3/static/img/logo.a7995ad.svg1&quot;</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> p<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u5EF6\u65F6\u51FD\u6570\uFF0C\u7528\u4E8E\u7ED9\u8BF7\u6C42\u8BA1\u65F6</span>
<span class="token keyword">function</span> <span class="token function">timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">reject</span><span class="token punctuation">(</span><span class="token string">&quot;\u56FE\u7247\u8BF7\u6C42\u8D85\u65F6&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> p<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

Promise<span class="token punctuation">.</span><span class="token function">race</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">requestImg</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">timeout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">results</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>results<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">reason</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reason<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,86),o=[e];function c(i,u){return s(),a("div",null,o)}const k=n(p,[["render",c],["__file","promise.html.vue"]]);export{k as default};
