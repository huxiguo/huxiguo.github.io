import{_ as n,o as s,c as a,d as e}from"./app.91a380bb.js";const p={},t=e(`<h1 id="\u9762\u8BD5\u5B98-\u4F60\u662F\u600E\u4E48\u7406\u89E3-es6-\u4E2D-proxy-\u7684-\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u5B98-\u4F60\u662F\u600E\u4E48\u7406\u89E3-es6-\u4E2D-proxy-\u7684-\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u9762\u8BD5\u5B98\uFF1A\u4F60\u662F\u600E\u4E48\u7406\u89E3 ES6 \u4E2D Proxy \u7684\uFF1F\u4F7F\u7528\u573A\u666F?</h1><p><img src="https://static.vue-js.com/6f656e30-59f5-11eb-85f6-6fac77c0c9b3.png" alt=""></p><h2 id="\u4E00\u3001\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u4ECB\u7ECD" aria-hidden="true">#</a> \u4E00\u3001\u4ECB\u7ECD</h2><p><strong>\u5B9A\u4E49\uFF1A</strong> \u7528\u4E8E\u5B9A\u4E49\u57FA\u672C\u64CD\u4F5C\u7684\u81EA\u5B9A\u4E49\u884C\u4E3A</p><p><strong>\u672C\u8D28\uFF1A</strong> \u4FEE\u6539\u7684\u662F\u7A0B\u5E8F\u9ED8\u8BA4\u5F62\u4E3A\uFF0C\u5C31\u5F62\u540C\u4E8E\u5728\u7F16\u7A0B\u8BED\u8A00\u5C42\u9762\u4E0A\u505A\u4FEE\u6539\uFF0C\u5C5E\u4E8E\u5143\u7F16\u7A0B<code>(meta programming)</code></p><p>\u5143\u7F16\u7A0B\uFF08Metaprogramming\uFF0C\u53C8\u8BD1\u8D85\u7F16\u7A0B\uFF0C\u662F\u6307\u67D0\u7C7B\u8BA1\u7B97\u673A\u7A0B\u5E8F\u7684\u7F16\u5199\uFF0C\u8FD9\u7C7B\u8BA1\u7B97\u673A\u7A0B\u5E8F\u7F16\u5199\u6216\u8005\u64CD\u7EB5\u5176\u5B83\u7A0B\u5E8F\uFF08\u6216\u8005\u81EA\u8EAB\uFF09\u4F5C\u4E3A\u5B83\u4EEC\u7684\u6570\u636E\uFF0C\u6216\u8005\u5728\u8FD0\u884C\u65F6\u5B8C\u6210\u90E8\u5206\u672C\u5E94\u5728\u7F16\u8BD1\u65F6\u5B8C\u6210\u7684\u5DE5\u4F5C</p><p>\u4E00\u6BB5\u4EE3\u7801\u6765\u7406\u89E3</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token shebang important">#!/bin/bash</span>
<span class="token comment"># metaprogram</span>
<span class="token builtin class-name">echo</span> <span class="token string">&#39;#!/bin/bash&#39;</span> <span class="token operator">&gt;</span>program
<span class="token keyword">for</span> <span class="token variable"><span class="token punctuation">((</span>I<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> I<span class="token operator">&lt;=</span><span class="token number">1024</span><span class="token punctuation">;</span> I<span class="token operator">++</span><span class="token punctuation">))</span></span> <span class="token keyword">do</span>
    <span class="token builtin class-name">echo</span> <span class="token string">&quot;echo <span class="token variable">$I</span>&quot;</span> <span class="token operator">&gt;&gt;</span>program
<span class="token keyword">done</span>
<span class="token function">chmod</span> +x program
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u6BB5\u7A0B\u5E8F\u6BCF\u6267\u884C\u4E00\u6B21\u80FD\u5E2E\u6211\u4EEC\u751F\u6210\u4E00\u4E2A\u540D\u4E3A<code>program</code>\u7684\u6587\u4EF6\uFF0C\u6587\u4EF6\u5185\u5BB9\u4E3A 1024 \u884C<code>echo</code>\uFF0C\u5982\u679C\u6211\u4EEC\u624B\u52A8\u6765\u5199 1024 \u884C\u4EE3\u7801\uFF0C\u6548\u7387\u663E\u7136\u4F4E\u6548</p><ul><li>\u5143\u7F16\u7A0B\u4F18\u70B9\uFF1A\u4E0E\u624B\u5DE5\u7F16\u5199\u5168\u90E8\u4EE3\u7801\u76F8\u6BD4\uFF0C\u7A0B\u5E8F\u5458\u53EF\u4EE5\u83B7\u5F97\u66F4\u9AD8\u7684\u5DE5\u4F5C\u6548\u7387\uFF0C\u6216\u8005\u7ED9\u4E0E\u7A0B\u5E8F\u66F4\u5927\u7684\u7075\u6D3B\u5EA6\u53BB\u5904\u7406\u65B0\u7684\u60C5\u5F62\u800C\u65E0\u9700\u91CD\u65B0\u7F16\u8BD1</li></ul><p><code>Proxy</code> \u4EA6\u662F\u5982\u6B64\uFF0C\u7528\u4E8E\u521B\u5EFA\u4E00\u4E2A\u5BF9\u8C61\u7684\u4EE3\u7406\uFF0C\u4ECE\u800C\u5B9E\u73B0\u57FA\u672C\u64CD\u4F5C\u7684\u62E6\u622A\u548C\u81EA\u5B9A\u4E49\uFF08\u5982\u5C5E\u6027\u67E5\u627E\u3001\u8D4B\u503C\u3001\u679A\u4E3E\u3001\u51FD\u6570\u8C03\u7528\u7B49\uFF09</p><h2 id="\u4E8C\u3001\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u7528\u6CD5" aria-hidden="true">#</a> \u4E8C\u3001\u7528\u6CD5</h2><p><code>Proxy</code>\u4E3A \u6784\u9020\u51FD\u6570\uFF0C\u7528\u6765\u751F\u6210 <code>Proxy </code>\u5B9E\u4F8B</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="\u53C2\u6570" tabindex="-1"><a class="header-anchor" href="#\u53C2\u6570" aria-hidden="true">#</a> \u53C2\u6570</h3><p><code>target</code>\u8868\u793A\u6240\u8981\u62E6\u622A\u7684\u76EE\u6807\u5BF9\u8C61\uFF08\u4EFB\u4F55\u7C7B\u578B\u7684\u5BF9\u8C61\uFF0C\u5305\u62EC\u539F\u751F\u6570\u7EC4\uFF0C\u51FD\u6570\uFF0C\u751A\u81F3\u53E6\u4E00\u4E2A\u4EE3\u7406\uFF09\uFF09</p><p><code>handler</code>\u901A\u5E38\u4EE5\u51FD\u6570\u4F5C\u4E3A\u5C5E\u6027\u7684\u5BF9\u8C61\uFF0C\u5404\u5C5E\u6027\u4E2D\u7684\u51FD\u6570\u5206\u522B\u5B9A\u4E49\u4E86\u5728\u6267\u884C\u5404\u79CD\u64CD\u4F5C\u65F6\u4EE3\u7406 <code>p</code> \u7684\u884C\u4E3A</p><h3 id="handler-\u89E3\u6790" tabindex="-1"><a class="header-anchor" href="#handler-\u89E3\u6790" aria-hidden="true">#</a> handler \u89E3\u6790</h3><p>\u5173\u4E8E<code>handler</code>\u62E6\u622A\u5C5E\u6027\uFF0C\u6709\u5982\u4E0B\uFF1A</p><ul><li>get(target,propKey,receiver)\uFF1A\u62E6\u622A\u5BF9\u8C61\u5C5E\u6027\u7684\u8BFB\u53D6</li><li>set(target,propKey,value,receiver)\uFF1A\u62E6\u622A\u5BF9\u8C61\u5C5E\u6027\u7684\u8BBE\u7F6E</li><li>has(target,propKey)\uFF1A\u62E6\u622A<code>propKey in proxy</code>\u7684\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li>deleteProperty(target,propKey)\uFF1A\u62E6\u622A<code>delete proxy[propKey]</code>\u7684\u64CD\u4F5C\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li>ownKeys(target)\uFF1A\u62E6\u622A<code>Object.keys(proxy)</code>\u3001<code>for...in</code>\u7B49\u5FAA\u73AF\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4</li><li>getOwnPropertyDescriptor(target, propKey)\uFF1A\u62E6\u622A<code>Object.getOwnPropertyDescriptor(proxy, propKey)</code>\uFF0C\u8FD4\u56DE\u5C5E\u6027\u7684\u63CF\u8FF0\u5BF9\u8C61</li><li>defineProperty(target, propKey, propDesc)\uFF1A\u62E6\u622A<code>Object.defineProperty(proxy, propKey, propDesc\uFF09</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li>preventExtensions(target)\uFF1A\u62E6\u622A<code>Object.preventExtensions(proxy)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li>getPrototypeOf(target)\uFF1A\u62E6\u622A<code>Object.getPrototypeOf(proxy)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5BF9\u8C61</li><li>isExtensible(target)\uFF1A\u62E6\u622A<code>Object.isExtensible(proxy)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li>setPrototypeOf(target, proto)\uFF1A\u62E6\u622A<code>Object.setPrototypeOf(proxy, proto)</code>\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u5E03\u5C14\u503C</li><li>apply(target, object, args)\uFF1A\u62E6\u622A Proxy \u5B9E\u4F8B\u4F5C\u4E3A\u51FD\u6570\u8C03\u7528\u7684\u64CD\u4F5C</li><li>construct(target, args)\uFF1A\u62E6\u622A Proxy \u5B9E\u4F8B\u4F5C\u4E3A\u6784\u9020\u51FD\u6570\u8C03\u7528\u7684\u64CD\u4F5C</li></ul><h3 id="reflect" tabindex="-1"><a class="header-anchor" href="#reflect" aria-hidden="true">#</a> Reflect</h3><p>\u82E5\u9700\u8981\u5728<code>Proxy</code>\u5185\u90E8\u8C03\u7528\u5BF9\u8C61\u7684\u9ED8\u8BA4\u884C\u4E3A\uFF0C\u5EFA\u8BAE\u4F7F\u7528<code>Reflect</code>\uFF0C\u5176\u662F<code>ES6</code>\u4E2D\u64CD\u4F5C\u5BF9\u8C61\u800C\u63D0\u4F9B\u7684\u65B0 <code>API</code></p><p>\u57FA\u672C\u7279\u70B9\uFF1A</p><ul><li>\u53EA\u8981<code>Proxy</code>\u5BF9\u8C61\u5177\u6709\u7684\u4EE3\u7406\u65B9\u6CD5\uFF0C<code>Reflect</code>\u5BF9\u8C61\u5168\u90E8\u5177\u6709\uFF0C\u4EE5\u9759\u6001\u65B9\u6CD5\u7684\u5F62\u5F0F\u5B58\u5728</li><li>\u4FEE\u6539\u67D0\u4E9B<code>Object</code>\u65B9\u6CD5\u7684\u8FD4\u56DE\u7ED3\u679C\uFF0C\u8BA9\u5176\u53D8\u5F97\u66F4\u5408\u7406\uFF08\u5B9A\u4E49\u4E0D\u5B58\u5728\u5C5E\u6027\u884C\u4E3A\u7684\u65F6\u5019\u4E0D\u62A5\u9519\u800C\u662F\u8FD4\u56DE<code>false</code>\uFF09</li><li>\u8BA9<code>Object</code>\u64CD\u4F5C\u90FD\u53D8\u6210\u51FD\u6570\u884C\u4E3A</li></ul><p>\u4E0B\u9762\u6211\u4EEC\u4ECB\u7ECD<code>proxy</code>\u51E0\u79CD\u7528\u6CD5\uFF1A</p><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get" aria-hidden="true">#</a> get()</h3><p><code>get</code>\u63A5\u53D7\u4E09\u4E2A\u53C2\u6570\uFF0C\u4F9D\u6B21\u4E3A\u76EE\u6807\u5BF9\u8C61\u3001\u5C5E\u6027\u540D\u548C <code>proxy</code> \u5B9E\u4F8B\u672C\u8EAB\uFF0C\u6700\u540E\u4E00\u4E2A\u53C2\u6570\u53EF\u9009</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> person <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;\u5F20\u4E09&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>person<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">get</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> propKey</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

proxy<span class="token punctuation">.</span>name <span class="token comment">// &quot;\u5F20\u4E09&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>get</code>\u80FD\u591F\u5BF9\u6570\u7EC4\u589E\u5220\u6539\u67E5\u8FDB\u884C\u62E6\u622A\uFF0C\u4E0B\u9762\u662F\u8BD5\u4E0B\u4F60\u6570\u7EC4\u8BFB\u53D6\u8D1F\u6570\u7684\u7D22\u5F15</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">createArray</span><span class="token punctuation">(</span><span class="token parameter"><span class="token operator">...</span>elements</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">let</span> index <span class="token operator">=</span> <span class="token function">Number</span><span class="token punctuation">(</span>propKey<span class="token punctuation">)</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>index <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        propKey <span class="token operator">=</span> <span class="token function">String</span><span class="token punctuation">(</span>target<span class="token punctuation">.</span>length <span class="token operator">+</span> index<span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">let</span> target <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  target<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token operator">...</span>elements<span class="token punctuation">)</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> arr <span class="token operator">=</span> <span class="token function">createArray</span><span class="token punctuation">(</span><span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;c&#39;</span><span class="token punctuation">)</span>
arr<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">// c</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF1A\u5982\u679C\u4E00\u4E2A\u5C5E\u6027\u4E0D\u53EF\u914D\u7F6E\uFF08configurable\uFF09\u4E14\u4E0D\u53EF\u5199\uFF08writable\uFF09\uFF0C\u5219 Proxy \u4E0D\u80FD\u4FEE\u6539\u8BE5\u5C5E\u6027\uFF0C\u5426\u5219\u4F1A\u62A5\u9519</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> target <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">defineProperties</span><span class="token punctuation">(</span>
  <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">{</span>
    <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token number">123</span><span class="token punctuation">,</span>
      <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token literal-property property">configurable</span><span class="token operator">:</span> <span class="token boolean">false</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">)</span>

<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> propKey<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;abc&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>

proxy<span class="token punctuation">.</span>foo
<span class="token comment">// TypeError: Invariant check failed</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="set" tabindex="-1"><a class="header-anchor" href="#set" aria-hidden="true">#</a> set()</h3><p><code>set</code>\u65B9\u6CD5\u7528\u6765\u62E6\u622A\u67D0\u4E2A\u5C5E\u6027\u7684\u8D4B\u503C\u64CD\u4F5C\uFF0C\u53EF\u4EE5\u63A5\u53D7\u56DB\u4E2A\u53C2\u6570\uFF0C\u4F9D\u6B21\u4E3A\u76EE\u6807\u5BF9\u8C61\u3001\u5C5E\u6027\u540D\u3001\u5C5E\u6027\u503C\u548C <code>Proxy</code> \u5B9E\u4F8B\u672C\u8EAB</p><p>\u5047\u5B9A<code>Person</code>\u5BF9\u8C61\u6709\u4E00\u4E2A<code>age</code>\u5C5E\u6027\uFF0C\u8BE5\u5C5E\u6027\u5E94\u8BE5\u662F\u4E00\u4E2A\u4E0D\u5927\u4E8E 200 \u7684\u6574\u6570\uFF0C\u90A3\u4E48\u53EF\u4EE5\u4F7F\u7528<code>Proxy</code>\u4FDD\u8BC1<code>age</code>\u7684\u5C5E\u6027\u503C\u7B26\u5408\u8981\u6C42</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> validator <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>prop <span class="token operator">===</span> <span class="token string">&#39;age&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>Number<span class="token punctuation">.</span><span class="token function">isInteger</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">TypeError</span><span class="token punctuation">(</span><span class="token string">&#39;The age is not an integer&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token operator">&gt;</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RangeError</span><span class="token punctuation">(</span><span class="token string">&#39;The age seems invalid&#39;</span><span class="token punctuation">)</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token comment">// \u5BF9\u4E8E\u6EE1\u8DB3\u6761\u4EF6\u7684 age \u5C5E\u6027\u4EE5\u53CA\u5176\u4ED6\u5C5E\u6027\uFF0C\u76F4\u63A5\u4FDD\u5B58</span>
    obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> value
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> validator<span class="token punctuation">)</span>

person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">100</span>

person<span class="token punctuation">.</span>age <span class="token comment">// 100</span>
person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token string">&#39;young&#39;</span> <span class="token comment">// \u62A5\u9519</span>
person<span class="token punctuation">.</span>age <span class="token operator">=</span> <span class="token number">300</span> <span class="token comment">// \u62A5\u9519</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u76EE\u6807\u5BF9\u8C61\u81EA\u8EAB\u7684\u67D0\u4E2A\u5C5E\u6027\uFF0C\u4E0D\u53EF\u5199\u4E14\u4E0D\u53EF\u914D\u7F6E\uFF0C\u90A3\u4E48<code>set</code>\u65B9\u6CD5\u5C06\u4E0D\u8D77\u4F5C\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token string">&#39;foo&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;bar&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">writable</span><span class="token operator">:</span> <span class="token boolean">false</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;baz&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
proxy<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&#39;baz&#39;</span>
proxy<span class="token punctuation">.</span>foo <span class="token comment">// &quot;bar&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u4E25\u683C\u6A21\u5F0F\u4E0B\uFF0C<code>set</code>\u4EE3\u7406\u5982\u679C\u6CA1\u6709\u8FD4\u56DE<code>true</code>\uFF0C\u5C31\u4F1A\u62A5\u9519</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token string">&#39;use strict&#39;</span>
<span class="token keyword">const</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function-variable function">set</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> prop<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    obj<span class="token punctuation">[</span>prop<span class="token punctuation">]</span> <span class="token operator">=</span> receiver
    <span class="token comment">// \u65E0\u8BBA\u6709\u6CA1\u6709\u4E0B\u9762\u8FD9\u4E00\u884C\uFF0C\u90FD\u4F1A\u62A5\u9519</span>
    <span class="token keyword">return</span> <span class="token boolean">false</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
proxy<span class="token punctuation">.</span>foo <span class="token operator">=</span> <span class="token string">&#39;bar&#39;</span>
<span class="token comment">// TypeError: &#39;set&#39; on proxy: trap returned falsish for property &#39;foo&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="deleteproperty" tabindex="-1"><a class="header-anchor" href="#deleteproperty" aria-hidden="true">#</a> deleteProperty()</h3><p><code>deleteProperty</code>\u65B9\u6CD5\u7528\u4E8E\u62E6\u622A<code>delete</code>\u64CD\u4F5C\uFF0C\u5982\u679C\u8FD9\u4E2A\u65B9\u6CD5\u629B\u51FA\u9519\u8BEF\u6216\u8005\u8FD4\u56DE<code>false</code>\uFF0C\u5F53\u524D\u5C5E\u6027\u5C31\u65E0\u6CD5\u88AB<code>delete</code>\u547D\u4EE4\u5220\u9664</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> handler <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">deleteProperty</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">invariant</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> <span class="token string">&#39;delete&#39;</span><span class="token punctuation">)</span>
    Reflect<span class="token punctuation">.</span><span class="token function">deleteProperty</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token boolean">true</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">invariant</span><span class="token punctuation">(</span><span class="token parameter">key<span class="token punctuation">,</span> action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">===</span> <span class="token string">&#39;_&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">\u65E0\u6CD5\u5220\u9664\u79C1\u6709\u5C5E\u6027</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> target <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">_prop</span><span class="token operator">:</span> <span class="token string">&#39;foo&#39;</span> <span class="token punctuation">}</span>
<span class="token keyword">var</span> proxy <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> handler<span class="token punctuation">)</span>
<span class="token keyword">delete</span> proxy<span class="token punctuation">.</span>_prop
<span class="token comment">// Error: \u65E0\u6CD5\u5220\u9664\u79C1\u6709\u5C5E\u6027</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6CE8\u610F\uFF0C\u76EE\u6807\u5BF9\u8C61\u81EA\u8EAB\u7684\u4E0D\u53EF\u914D\u7F6E\uFF08configurable\uFF09\u7684\u5C5E\u6027\uFF0C\u4E0D\u80FD\u88AB<code>deleteProperty</code>\u65B9\u6CD5\u5220\u9664\uFF0C\u5426\u5219\u62A5\u9519</p><h3 id="\u53D6\u6D88\u4EE3\u7406" tabindex="-1"><a class="header-anchor" href="#\u53D6\u6D88\u4EE3\u7406" aria-hidden="true">#</a> \u53D6\u6D88\u4EE3\u7406</h3><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Proxy.revocable(target, handler);
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="\u4E09\u3001\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u4E09\u3001\u4F7F\u7528\u573A\u666F</h2><p><code>Proxy</code>\u5176\u529F\u80FD\u975E\u5E38\u7C7B\u4F3C\u4E8E\u8BBE\u8BA1\u6A21\u5F0F\u4E2D\u7684\u4EE3\u7406\u6A21\u5F0F\uFF0C\u5E38\u7528\u529F\u80FD\u5982\u4E0B\uFF1A</p><ul><li>\u62E6\u622A\u548C\u76D1\u89C6\u5916\u90E8\u5BF9\u5BF9\u8C61\u7684\u8BBF\u95EE</li><li>\u964D\u4F4E\u51FD\u6570\u6216\u7C7B\u7684\u590D\u6742\u5EA6</li><li>\u5728\u590D\u6742\u64CD\u4F5C\u524D\u5BF9\u64CD\u4F5C\u8FDB\u884C\u6821\u9A8C\u6216\u5BF9\u6240\u9700\u8D44\u6E90\u8FDB\u884C\u7BA1\u7406</li></ul><p>\u4F7F\u7528 <code>Proxy</code> \u4FDD\u969C\u6570\u636E\u7C7B\u578B\u7684\u51C6\u786E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> numericDataStore <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">count</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token literal-property property">amount</span><span class="token operator">:</span> <span class="token number">1234</span><span class="token punctuation">,</span> <span class="token literal-property property">total</span><span class="token operator">:</span> <span class="token number">14</span> <span class="token punctuation">}</span>
numericDataStore <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>numericDataStore<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token keyword">typeof</span> value <span class="token operator">!==</span> <span class="token string">&#39;number&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token string">&#39;\u5C5E\u6027\u53EA\u80FD\u662Fnumber\u7C7B\u578B&#39;</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

numericDataStore<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token string">&#39;foo&#39;</span>
<span class="token comment">// Error: \u5C5E\u6027\u53EA\u80FD\u662Fnumber\u7C7B\u578B</span>

numericDataStore<span class="token punctuation">.</span>count <span class="token operator">=</span> <span class="token number">333</span>
<span class="token comment">// \u8D4B\u503C\u6210\u529F</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u58F0\u660E\u4E86\u4E00\u4E2A\u79C1\u6709\u7684 <code>apiKey</code>\uFF0C\u4FBF\u4E8E <code>api</code> \u8FD9\u4E2A\u5BF9\u8C61\u5185\u90E8\u7684\u65B9\u6CD5\u8C03\u7528\uFF0C\u4F46\u4E0D\u5E0C\u671B\u4ECE\u5916\u90E8\u4E5F\u80FD\u591F\u8BBF\u95EE <code>api._apiKey</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> api <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">_apiKey</span><span class="token operator">:</span> <span class="token string">&#39;123abc456def&#39;</span><span class="token punctuation">,</span>
  <span class="token function-variable function">getUsers</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">getUser</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">userId</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function-variable function">setUser</span><span class="token operator">:</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">userId<span class="token punctuation">,</span> config</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> <span class="token constant">RESTRICTED</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&#39;_apiKey&#39;</span><span class="token punctuation">]</span>
api <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>api<span class="token punctuation">,</span> <span class="token punctuation">{</span>
  <span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">RESTRICTED</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u4E0D\u53EF\u8BBF\u95EE.</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token constant">RESTRICTED</span><span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">throw</span> <span class="token function">Error</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> \u4E0D\u53EF\u4FEE\u6539</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> Reflect<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> proxy<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>api<span class="token punctuation">.</span>_apiKey<span class="token punctuation">)</span>
api<span class="token punctuation">.</span>_apiKey <span class="token operator">=</span> <span class="token string">&#39;987654321&#39;</span>
<span class="token comment">// \u4E0A\u8FF0\u90FD\u629B\u51FA\u9519\u8BEF</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u80FD\u901A\u8FC7\u4F7F\u7528<code>Proxy</code>\u5B9E\u73B0\u89C2\u5BDF\u8005\u6A21\u5F0F</p><p>\u89C2\u5BDF\u8005\u6A21\u5F0F\uFF08Observer mode\uFF09\u6307\u7684\u662F\u51FD\u6570\u81EA\u52A8\u89C2\u5BDF\u6570\u636E\u5BF9\u8C61\uFF0C\u4E00\u65E6\u5BF9\u8C61\u6709\u53D8\u5316\uFF0C\u51FD\u6570\u5C31\u4F1A\u81EA\u52A8\u6267\u884C</p><p><code>observable</code>\u51FD\u6570\u8FD4\u56DE\u4E00\u4E2A\u539F\u59CB\u5BF9\u8C61\u7684 <code>Proxy</code> \u4EE3\u7406\uFF0C\u62E6\u622A\u8D4B\u503C\u64CD\u4F5C\uFF0C\u89E6\u53D1\u5145\u5F53\u89C2\u5BDF\u8005\u7684\u5404\u4E2A\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> queuedObservers <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">observe</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">fn</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> queuedObservers<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>fn<span class="token punctuation">)</span>
<span class="token keyword">const</span> <span class="token function-variable function">observable</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token keyword">new</span> <span class="token class-name">Proxy</span><span class="token punctuation">(</span>obj<span class="token punctuation">,</span> <span class="token punctuation">{</span> set <span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">function</span> <span class="token function">set</span><span class="token punctuation">(</span><span class="token parameter">target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>target<span class="token punctuation">,</span> key<span class="token punctuation">,</span> value<span class="token punctuation">,</span> receiver<span class="token punctuation">)</span>
  queuedObservers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">observer</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">observer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u89C2\u5BDF\u8005\u51FD\u6570\u90FD\u653E\u8FDB<code>Set</code>\u96C6\u5408\uFF0C\u5F53\u4FEE\u6539<code>obj</code>\u7684\u503C\uFF0C\u5728\u4F1A<code>set</code>\u51FD\u6570\u4E2D\u62E6\u622A\uFF0C\u81EA\u52A8\u6267\u884C<code>Set</code>\u6240\u6709\u7684\u89C2\u5BDF\u8005</p>`,58),o=[t];function c(l,i){return s(),a("div",null,o)}const u=n(p,[["render",c],["__file","proxy.html.vue"]]);export{u as default};
