import{_ as n,o as s,c as a,d as e}from"./app.91a380bb.js";const t={},p=e(`<h1 id="_2259-\u79FB\u9664\u6307\u5B9A\u6570\u5B57\u5F97\u5230\u7684\u6700\u5927\u7ED3\u679C" tabindex="-1"><a class="header-anchor" href="#_2259-\u79FB\u9664\u6307\u5B9A\u6570\u5B57\u5F97\u5230\u7684\u6700\u5927\u7ED3\u679C" aria-hidden="true">#</a> 2259. \u79FB\u9664\u6307\u5B9A\u6570\u5B57\u5F97\u5230\u7684\u6700\u5927\u7ED3\u679C</h1><h2 id="\u9898\u76EE" tabindex="-1"><a class="header-anchor" href="#\u9898\u76EE" aria-hidden="true">#</a> \u9898\u76EE</h2><p>\u7ED9\u4F60\u4E00\u4E2A\u8868\u793A\u67D0\u4E2A\u6B63\u6574\u6570\u7684\u5B57\u7B26\u4E32 <code>number</code> \u548C\u4E00\u4E2A\u5B57\u7B26 <code>digit</code></p><p>\u4ECE <code>number</code> \u4E2D \u6070\u597D \u79FB\u9664 \u4E00\u4E2A \u7B49\u4E8E <code>digit</code> \u7684\u5B57\u7B26\u540E\uFF0C\u627E\u51FA\u5E76\u8FD4\u56DE\u6309 \u5341\u8FDB\u5236 \u8868\u793A \u6700\u5927 \u7684\u7ED3\u679C\u5B57\u7B26\u4E32\u3002\u751F\u6210\u7684\u6D4B\u8BD5\u7528\u4F8B\u6EE1\u8DB3 <code>digit</code> \u5728 <code>number</code> \u4E2D\u51FA\u73B0\u81F3\u5C11\u4E00\u6B21\u3002</p><h2 id="\u4F8B\u5B50" tabindex="-1"><a class="header-anchor" href="#\u4F8B\u5B50" aria-hidden="true">#</a> \u4F8B\u5B50</h2><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>\u8F93\u5165\uFF1Anumber = &quot;551&quot;, digit = &quot;5&quot;
\u8F93\u51FA\uFF1A&quot;51&quot;
\u89E3\u91CA\uFF1A\u53EF\u4EE5\u4ECE &quot;551&quot; \u4E2D\u79FB\u9664\u7B2C\u4E00\u4E2A\u6216\u8005\u7B2C\u4E8C\u4E2A &#39;5&#39; \u3002
\u4E24\u79CD\u65B9\u6848\u7684\u7ED3\u679C\u90FD\u662F &quot;51&quot; \u3002
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u601D\u8DEF" tabindex="-1"><a class="header-anchor" href="#\u601D\u8DEF" aria-hidden="true">#</a> \u601D\u8DEF</h2><p><code>slice()</code>\u622A\u53D6\u5B57\u7B26\u4E32,\u518D\u62FC\u63A5</p><h2 id="\u9898\u89E3" tabindex="-1"><a class="header-anchor" href="#\u9898\u89E3" aria-hidden="true">#</a> \u9898\u89E3</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token function">removeDigit</span><span class="token punctuation">(</span><span class="token builtin">number</span><span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> digit<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> res <span class="token operator">=</span> <span class="token string">&quot;0&quot;</span><span class="token punctuation">;</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token builtin">number</span><span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">number</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">===</span> digit<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">const</span> temp <span class="token operator">=</span> <span class="token builtin">number</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token builtin">number</span><span class="token punctuation">.</span><span class="token function">slice</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>temp <span class="token operator">&gt;</span> res<span class="token punctuation">)</span> res <span class="token operator">=</span> temp<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,10),o=[p];function i(c,l){return s(),a("div",null,o)}const r=n(t,[["render",i],["__file","remove-digit-from-number-to-maximize-result.html.vue"]]);export{r as default};
