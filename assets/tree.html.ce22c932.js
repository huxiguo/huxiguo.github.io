import{_ as n,o as s,c as a,d as p}from"./app.91a380bb.js";const t={},e=p(`<h1 id="\u9762\u8BD5\u5B98-\u8BF4\u8BF4\u4F60\u5BF9\u6811\u7684\u7406\u89E3-\u76F8\u5173\u7684\u64CD\u4F5C\u6709\u54EA\u4E9B" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u5B98-\u8BF4\u8BF4\u4F60\u5BF9\u6811\u7684\u7406\u89E3-\u76F8\u5173\u7684\u64CD\u4F5C\u6709\u54EA\u4E9B" aria-hidden="true">#</a> \u9762\u8BD5\u5B98\uFF1A\u8BF4\u8BF4\u4F60\u5BF9\u6811\u7684\u7406\u89E3\uFF1F\u76F8\u5173\u7684\u64CD\u4F5C\u6709\u54EA\u4E9B\uFF1F</h1><p><img src="https://static.vue-js.com/5a7616f0-1dfe-11ec-8e64-91fdec0f05a1.png" alt=""></p><h2 id="\u4E00\u3001\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u662F\u4EC0\u4E48" aria-hidden="true">#</a> \u4E00\u3001\u662F\u4EC0\u4E48</h2><p>\u5728\u8BA1\u7B97\u673A\u9886\u57DF\uFF0C\u6811\u5F62\u6570\u636E\u7ED3\u6784\u662F\u4E00\u7C7B\u91CD\u8981\u7684\u975E\u7EBF\u6027\u6570\u636E\u7ED3\u6784\uFF0C\u53EF\u4EE5\u8868\u793A\u6570\u636E\u4E4B\u95F4\u4E00\u5BF9\u591A\u7684\u5173\u7CFB\u3002\u4EE5\u6811\u4E0E\u4E8C\u53C9\u6811\u6700\u4E3A\u5E38\u7528\uFF0C\u76F4\u89C2\u770B\u6765\uFF0C\u6811\u662F\u4EE5\u5206\u652F\u5173\u7CFB\u5B9A\u4E49\u7684\u5C42\u6B21\u7ED3\u6784</p><p>\u4E8C\u53C9\u6811\u6EE1\u8DB3\u4EE5\u4E0B\u4E24\u4E2A\u6761\u4EF6\uFF1A</p><ul><li>\u672C\u8EAB\u662F\u6709\u5E8F\u6811</li><li>\u6811\u4E2D\u5305\u542B\u7684\u5404\u4E2A\u7ED3\u70B9\u7684\u4E0D\u80FD\u8D85\u8FC7 2\uFF0C\u5373\u53EA\u80FD\u662F 0\u30011 \u6216\u8005 2</li></ul><p>\u5982\u4E0B\u56FE\uFF0C\u5DE6\u4FA7\u7684\u4E3A\u4E8C\u53C9\u6811\uFF0C\u800C\u53F3\u4FA7\u7684\u56E0\u4E3A\u5934\u7ED3\u70B9\u7684\u5B50\u7ED3\u70B9\u8D85\u8FC7 2\uFF0C\u56E0\u6B64\u4E0D\u5C5E\u4E8E\u4E8C\u53C9\u6811\uFF1A</p><p><img src="https://static.vue-js.com/66758800-1dfe-11ec-a752-75723a64e8f5.png" alt=""></p><p>\u540C\u65F6\uFF0C\u4E8C\u53C9\u6811\u53EF\u4EE5\u7EE7\u7EED\u8FDB\u884C\u5206\u7C7B\uFF0C\u5206\u6210\u4E86\u6EE1\u4E8C\u53C9\u6811\u548C\u5B8C\u6210\u4E8C\u53C9\u6811\uFF1A</p><ul><li>\u6EE1\u4E8C\u53C9\u6811\uFF1A\u5982\u679C\u4E8C\u53C9\u6811\u4E2D\u9664\u4E86\u53F6\u5B50\u7ED3\u70B9\uFF0C\u6BCF\u4E2A\u7ED3\u70B9\u7684\u5EA6\u90FD\u4E3A 2</li></ul><p><img src="https://static.vue-js.com/759db050-1dfe-11ec-a752-75723a64e8f5.png" alt=""></p><ul><li>\u5B8C\u6210\u4E8C\u53C9\u6811\uFF1A\u5982\u679C\u4E8C\u53C9\u6811\u4E2D\u9664\u53BB\u6700\u540E\u4E00\u5C42\u8282\u70B9\u4E3A\u6EE1\u4E8C\u53C9\u6811\uFF0C\u4E14\u6700\u540E\u4E00\u5C42\u7684\u7ED3\u70B9\u4F9D\u6B21\u4ECE\u5DE6\u5230\u53F3\u5206\u5E03</li></ul><p><img src="https://static.vue-js.com/84ae31f0-1dfe-11ec-8e64-91fdec0f05a1.png" alt=""></p><h2 id="\u4E8C\u3001\u64CD\u4F5C" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u64CD\u4F5C" aria-hidden="true">#</a> \u4E8C\u3001\u64CD\u4F5C</h2><p>\u5173\u4E8E\u4E8C\u53C9\u6811\u7684\u904D\u5386\uFF0C\u5E38\u89C1\u7684\u6709\uFF1A</p><ul><li><p>\u524D\u5E8F\u904D\u5386</p></li><li><p>\u4E2D\u5E8F\u904D\u5386</p></li><li><p>\u540E\u5E8F\u904D\u5386</p></li><li><p>\u5C42\u5E8F\u904D\u5386</p></li></ul><h3 id="\u524D\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u524D\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u524D\u5E8F\u904D\u5386</h3><p>\u524D\u5E8F\u904D\u5386\u7684\u5B9E\u73B0\u601D\u60F3\u662F\uFF1A</p><ul><li>\u8BBF\u95EE\u6839\u8282\u70B9</li><li>\u8BBF\u95EE\u5F53\u524D\u8282\u70B9\u7684\u5DE6\u5B50\u6811</li><li>\u82E5\u5F53\u524D\u8282\u70B9\u65E0\u5DE6\u5B50\u6811\uFF0C\u5219\u8BBF\u95EE\u5F53\u524D\u8282\u70B9\u7684\u53F3\u5B50</li></ul><p>\u6839\u636E\u904D\u5386\u7279\u6027\uFF0C\u9012\u5F52\u7248\u672C\u7528\u4EE3\u7801\u8868\u793A\u5219\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">preOrder</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span>
  <span class="token function">preOrder</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
  <span class="token function">preOrder</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u4E0D\u4F7F\u7528\u9012\u5F52\u7248\u672C\uFF0C\u53EF\u4EE5\u501F\u52A9\u6808\u5148\u8FDB\u540E\u51FA\u7684\u7279\u6027\u5B9E\u73B0\uFF0C\u5148\u5C06\u6839\u8282\u70B9\u538B\u5165\u6808\uFF0C\u518D\u5206\u522B\u538B\u5165\u53F3\u8282\u70B9\u548C\u5DE6\u8282\u70B9\uFF0C\u76F4\u5230\u6808\u4E2D\u6CA1\u6709\u5143\u7D20\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">preOrder</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span>root<span class="token punctuation">]</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u4E2D\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u4E2D\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u4E2D\u5E8F\u904D\u5386</h3><p>\u524D\u5E8F\u904D\u5386\u7684\u5B9E\u73B0\u601D\u60F3\u662F\uFF1A</p><ul><li>\u8BBF\u95EE\u5F53\u524D\u8282\u70B9\u7684\u5DE6\u5B50\u6811</li><li>\u8BBF\u95EE\u6839\u8282\u70B9</li><li>\u8BBF\u95EE\u5F53\u524D\u8282\u70B9\u7684\u53F3\u5B50</li></ul><p>\u9012\u5F52\u7248\u672C\u5F88\u597D\u7406\u89E3\uFF0C\u7528\u4EE3\u7801\u8868\u793A\u5219\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">inOrder</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token function">inOrder</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
  <span class="token function">inOrder</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u975E\u9012\u5F52\u7248\u672C\u4E5F\u662F\u501F\u52A9\u6808\u5148\u8FDB\u540E\u51FA\u7684\u7279\u6027\uFF0C\u53EF\u4EE5\u4E00\u76F4\u9996\u5148\u4E00\u76F4\u538B\u5165\u8282\u70B9\u7684\u5DE6\u5143\u7D20\uFF0C\u5F53\u5DE6\u8282\u70B9\u6CA1\u6709\u540E\uFF0C\u624D\u5F00\u59CB\u8FDB\u884C\u51FA\u6808\u64CD\u4F5C\uFF0C\u538B\u5165\u53F3\u8282\u70B9\uFF0C\u7136\u540E\u6709\u4F9D\u6B21\u538B\u5165\u5DE6\u8282\u70B9\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">inOrder</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span>root<span class="token punctuation">]</span>
  <span class="token keyword">let</span> p <span class="token operator">=</span> root
  <span class="token keyword">while</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length <span class="token operator">||</span> p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">while</span> <span class="token punctuation">(</span>p<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>
      p <span class="token operator">=</span> p<span class="token punctuation">.</span>left
    <span class="token punctuation">}</span>
    <span class="token keyword">const</span> n <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
    p <span class="token operator">=</span> n<span class="token punctuation">.</span>right
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u540E\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u540E\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u540E\u5E8F\u904D\u5386</h3><p>\u524D\u5E8F\u904D\u5386\u7684\u5B9E\u73B0\u601D\u60F3\u662F\uFF1A</p><ul><li>\u8BBF\u95EE\u5F53\u524D\u8282\u70B9\u7684\u5DE6\u5B50\u6811</li><li>\u8BBF\u95EE\u5F53\u524D\u8282\u70B9\u7684\u53F3\u5B50</li><li>\u8BBF\u95EE\u6839\u8282\u70B9</li></ul><p>\u9012\u5F52\u7248\u672C\uFF0C\u7528\u4EE3\u7801\u8868\u793A\u5219\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">postOrder</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token function">postOrder</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
  <span class="token function">postOrder</span><span class="token punctuation">(</span>root<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u540E\u5E8F\u904D\u5386\u975E\u9012\u5F52\u7248\u672C\u5B9E\u9645\u6839\u5168\u5E8F\u904D\u5386\u662F\u9006\u5E8F\u5173\u7CFB\uFF0C\u53EF\u4EE5\u518D\u591A\u521B\u5EFA\u4E00\u4E2A\u6808\u7528\u6765\u8FDB\u884C\u8F93\u51FA\uFF0C\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">preOrder</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> stack <span class="token operator">=</span> <span class="token punctuation">[</span>root<span class="token punctuation">]</span>
  <span class="token keyword">const</span> outPut <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>stack<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n <span class="token operator">=</span> stack<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    outPut<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>right<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      stack<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>left<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>outPut<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n <span class="token operator">=</span> outPut<span class="token punctuation">.</span><span class="token function">pop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u5C42\u5E8F\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5C42\u5E8F\u904D\u5386" aria-hidden="true">#</a> \u5C42\u5E8F\u904D\u5386</h3><p>\u6309\u7167\u4E8C\u53C9\u6811\u4E2D\u7684\u5C42\u6B21\u4ECE\u5DE6\u5230\u53F3\u4F9D\u6B21\u904D\u5386\u6BCF\u5C42\u4E2D\u7684\u7ED3\u70B9</p><p>\u501F\u52A9\u961F\u5217\u5148\u8FDB\u5148\u51FA\u7684\u7279\u6027\uFF0C\u4ECE\u6811\u7684\u6839\u7ED3\u70B9\u5F00\u59CB\uFF0C\u4F9D\u6B21\u5C06\u5176\u5DE6\u5B69\u5B50\u548C\u53F3\u5B69\u5B50\u5165\u961F\u3002\u800C\u540E\u6BCF\u6B21\u961F\u5217\u4E2D\u4E00\u4E2A\u7ED3\u70B9\u51FA\u961F\uFF0C\u90FD\u5C06\u5176\u5DE6\u5B69\u5B50\u548C\u53F3\u5B69\u5B50\u5165\u961F\uFF0C\u76F4\u5230\u6811\u4E2D\u6240\u6709\u7ED3\u70B9\u90FD\u51FA\u961F\uFF0C\u51FA\u961F\u7ED3\u70B9\u7684\u5148\u540E\u987A\u5E8F\u5C31\u662F\u5C42\u6B21\u904D\u5386\u7684\u6700\u7EC8\u7ED3\u679C</p><p>\u7528\u4EE3\u7801\u8868\u793A\u5219\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">levelOrder</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">root</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>root<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>root<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>queue<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> n <span class="token operator">=</span> queue<span class="token punctuation">.</span><span class="token function">shift</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">const</span> <span class="token punctuation">[</span>node<span class="token punctuation">,</span> leval<span class="token punctuation">]</span> <span class="token operator">=</span> n
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>res<span class="token punctuation">[</span>leval<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">[</span>leval<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">[</span>node<span class="token punctuation">.</span>val<span class="token punctuation">]</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
      res<span class="token punctuation">[</span>leval<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span>node<span class="token punctuation">.</span>val<span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>left<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>node<span class="token punctuation">.</span>left<span class="token punctuation">,</span> leval <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>right<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      queue<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token punctuation">[</span>node<span class="token punctuation">.</span>right<span class="token punctuation">,</span> leval <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> res
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E09\u3001\u603B\u7ED3" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u603B\u7ED3" aria-hidden="true">#</a> \u4E09\u3001\u603B\u7ED3</h2><p>\u6811\u662F\u4E00\u4E2A\u975E\u5E38\u91CD\u8981\u7684\u975E\u7EBF\u6027\u7ED3\u6784\uFF0C\u5176\u4E2D\u4E8C\u53C9\u6811\u4EE5\u4E8C\u53C9\u6811\u6700\u5E38\u89C1\uFF0C\u4E8C\u53C9\u6811\u7684\u904D\u5386\u65B9\u5F0F\u53EF\u4EE5\u5206\u6210\u524D\u5E8F\u904D\u5386\u3001\u4E2D\u5E8F\u904D\u5386\u3001\u540E\u5E8F\u904D\u5386</p><p>\u540C\u65F6\uFF0C\u4E8C\u53C9\u6811\u53C8\u5206\u6210\u4E86\u5B8C\u6210\u4E8C\u53C9\u6811\u548C\u6EE1\u4E8C\u53C9\u6811</p>`,45),o=[e];function c(i,l){return s(),a("div",null,o)}const r=n(t,[["render",c],["__file","tree.html.vue"]]);export{r as default};
