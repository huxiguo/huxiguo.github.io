import{_ as n,o as s,c as a,d as e}from"./app.91a380bb.js";const p={},t=e(`<h1 id="\u9762\u8BD5\u5B98-\u4F60\u662F\u600E\u4E48\u7406\u89E3-es6-\u4E2D-generator-\u7684-\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u5B98-\u4F60\u662F\u600E\u4E48\u7406\u89E3-es6-\u4E2D-generator-\u7684-\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u9762\u8BD5\u5B98\uFF1A\u4F60\u662F\u600E\u4E48\u7406\u89E3 ES6 \u4E2D Generator \u7684\uFF1F\u4F7F\u7528\u573A\u666F\uFF1F</h1><p><img src="https://static.vue-js.com/7db499b0-5947-11eb-ab90-d9ae814b240d.png" alt=""></p><h2 id="\u4E00\u3001\u4ECB\u7ECD" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u4ECB\u7ECD" aria-hidden="true">#</a> \u4E00\u3001\u4ECB\u7ECD</h2><p>Generator \u51FD\u6570\u662F ES6 \u63D0\u4F9B\u7684\u4E00\u79CD\u5F02\u6B65\u7F16\u7A0B\u89E3\u51B3\u65B9\u6848\uFF0C\u8BED\u6CD5\u884C\u4E3A\u4E0E\u4F20\u7EDF\u51FD\u6570\u5B8C\u5168\u4E0D\u540C</p><p>\u56DE\u987E\u4E0B\u4E0A\u6587\u63D0\u5230\u7684\u89E3\u51B3\u5F02\u6B65\u7684\u624B\u6BB5\uFF1A</p><ul><li>\u56DE\u8C03\u51FD\u6570</li><li>promise</li></ul><p>\u90A3\u4E48\uFF0C\u4E0A\u6587\u6211\u4EEC\u63D0\u5230<code>promsie</code>\u5DF2\u7ECF\u662F\u4E00\u79CD\u6BD4\u8F83\u6D41\u884C\u7684\u89E3\u51B3\u5F02\u6B65\u65B9\u6848\uFF0C\u90A3\u4E48\u4E3A\u4EC0\u4E48\u8FD8\u51FA\u73B0<code>Generator</code>\uFF1F\u751A\u81F3<code>async/await</code>\u5462\uFF1F</p><p>\u8BE5\u95EE\u9898\u6211\u4EEC\u7559\u5728\u540E\u9762\u518D\u8FDB\u884C\u5206\u6790\uFF0C\u4E0B\u9762\u5148\u8BA4\u8BC6\u4E0B<code>Generator</code></p><h3 id="generator-\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#generator-\u51FD\u6570" aria-hidden="true">#</a> Generator \u51FD\u6570</h3><p>\u6267\u884C <code>Generator</code> \u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u53EF\u4EE5\u4F9D\u6B21\u904D\u5386 <code>Generator</code> \u51FD\u6570\u5185\u90E8\u7684\u6BCF\u4E00\u4E2A\u72B6\u6001</p><p>\u5F62\u5F0F\u4E0A\uFF0C<code>Generator </code>\u51FD\u6570\u662F\u4E00\u4E2A\u666E\u901A\u51FD\u6570\uFF0C\u4F46\u662F\u6709\u4E24\u4E2A\u7279\u5F81\uFF1A</p><ul><li><code>function</code>\u5173\u952E\u5B57\u4E0E\u51FD\u6570\u540D\u4E4B\u95F4\u6709\u4E00\u4E2A\u661F\u53F7</li><li>\u51FD\u6570\u4F53\u5185\u90E8\u4F7F\u7528<code>yield</code>\u8868\u8FBE\u5F0F\uFF0C\u5B9A\u4E49\u4E0D\u540C\u7684\u5185\u90E8\u72B6\u6001</li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">helloWorldGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;hello&#39;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;world&#39;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;ending&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E8C\u3001\u4F7F\u7528" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u4F7F\u7528" aria-hidden="true">#</a> \u4E8C\u3001\u4F7F\u7528</h2><p><code>Generator</code> \u51FD\u6570\u4F1A\u8FD4\u56DE\u4E00\u4E2A\u904D\u5386\u5668\u5BF9\u8C61\uFF0C\u5373\u5177\u6709<code>Symbol.iterator</code>\u5C5E\u6027\uFF0C\u5E76\u4E14\u8FD4\u56DE\u7ED9\u81EA\u5DF1</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// some code</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> g <span class="token operator">=</span> <span class="token function">gen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

g<span class="token punctuation">[</span>Symbol<span class="token punctuation">.</span>iterator<span class="token punctuation">]</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">===</span> g
<span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u901A\u8FC7<code>yield</code>\u5173\u952E\u5B57\u53EF\u4EE5\u6682\u505C<code>generator</code>\u51FD\u6570\u8FD4\u56DE\u7684\u904D\u5386\u5668\u5BF9\u8C61\u7684\u72B6\u6001</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">helloWorldGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;hello&#39;</span>
  <span class="token keyword">yield</span> <span class="token string">&#39;world&#39;</span>
  <span class="token keyword">return</span> <span class="token string">&#39;ending&#39;</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> hw <span class="token operator">=</span> <span class="token function">helloWorldGenerator</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4E0A\u8FF0\u5B58\u5728\u4E09\u4E2A\u72B6\u6001\uFF1A<code>hello</code>\u3001<code>world</code>\u3001<code>return</code></p><p>\u901A\u8FC7<code>next</code>\u65B9\u6CD5\u624D\u4F1A\u904D\u5386\u5230\u4E0B\u4E00\u4E2A\u5185\u90E8\u72B6\u6001\uFF0C\u5176\u8FD0\u884C\u903B\u8F91\u5982\u4E0B\uFF1A</p><ul><li>\u9047\u5230<code>yield</code>\u8868\u8FBE\u5F0F\uFF0C\u5C31\u6682\u505C\u6267\u884C\u540E\u9762\u7684\u64CD\u4F5C\uFF0C\u5E76\u5C06\u7D27\u8DDF\u5728<code>yield</code>\u540E\u9762\u7684\u90A3\u4E2A\u8868\u8FBE\u5F0F\u7684\u503C\uFF0C\u4F5C\u4E3A\u8FD4\u56DE\u7684\u5BF9\u8C61\u7684<code>value</code>\u5C5E\u6027\u503C\u3002</li><li>\u4E0B\u4E00\u6B21\u8C03\u7528<code>next</code>\u65B9\u6CD5\u65F6\uFF0C\u518D\u7EE7\u7EED\u5F80\u4E0B\u6267\u884C\uFF0C\u76F4\u5230\u9047\u5230\u4E0B\u4E00\u4E2A<code>yield</code>\u8868\u8FBE\u5F0F</li><li>\u5982\u679C\u6CA1\u6709\u518D\u9047\u5230\u65B0\u7684<code>yield</code>\u8868\u8FBE\u5F0F\uFF0C\u5C31\u4E00\u76F4\u8FD0\u884C\u5230\u51FD\u6570\u7ED3\u675F\uFF0C\u76F4\u5230<code>return</code>\u8BED\u53E5\u4E3A\u6B62\uFF0C\u5E76\u5C06<code>return</code>\u8BED\u53E5\u540E\u9762\u7684\u8868\u8FBE\u5F0F\u7684\u503C\uFF0C\u4F5C\u4E3A\u8FD4\u56DE\u7684\u5BF9\u8C61\u7684<code>value</code>\u5C5E\u6027\u503C\u3002</li><li>\u5982\u679C\u8BE5\u51FD\u6570\u6CA1\u6709<code>return</code>\u8BED\u53E5\uFF0C\u5219\u8FD4\u56DE\u7684\u5BF9\u8C61\u7684<code>value</code>\u5C5E\u6027\u503C\u4E3A<code>undefined</code></li></ul><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: &#39;hello&#39;, done: false }</span>

hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: &#39;world&#39;, done: false }</span>

hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: &#39;ending&#39;, done: true }</span>

hw<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// { value: undefined, done: true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>done</code>\u7528\u6765\u5224\u65AD\u662F\u5426\u5B58\u5728\u4E0B\u4E2A\u72B6\u6001\uFF0C<code>value</code>\u5BF9\u5E94\u72B6\u6001\u503C</p><p><code>yield</code>\u8868\u8FBE\u5F0F\u672C\u8EAB\u6CA1\u6709\u8FD4\u56DE\u503C\uFF0C\u6216\u8005\u8BF4\u603B\u662F\u8FD4\u56DE<code>undefined</code></p><p>\u901A\u8FC7\u8C03\u7528<code>next</code>\u65B9\u6CD5\u53EF\u4EE5\u5E26\u4E00\u4E2A\u53C2\u6570\uFF0C\u8BE5\u53C2\u6570\u5C31\u4F1A\u88AB\u5F53\u4F5C\u4E0A\u4E00\u4E2A<code>yield</code>\u8868\u8FBE\u5F0F\u7684\u8FD4\u56DE\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token parameter">x</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> y <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token keyword">yield</span> x <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>
  <span class="token keyword">var</span> z <span class="token operator">=</span> <span class="token keyword">yield</span> y <span class="token operator">/</span> <span class="token number">3</span>
  <span class="token keyword">return</span> x <span class="token operator">+</span> y <span class="token operator">+</span> z
<span class="token punctuation">}</span>

<span class="token keyword">var</span> a <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
a<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Object{value:6, done:false}</span>
a<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Object{value:NaN, done:false}</span>
a<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// Object{value:NaN, done:true}</span>

<span class="token keyword">var</span> b <span class="token operator">=</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>
b<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">// { value:6, done:false }</span>
b<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span> <span class="token comment">// { value:8, done:false }</span>
b<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">)</span> <span class="token comment">// { value:42, done:true }</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6B63\u56E0\u4E3A<code>Generator </code>\u51FD\u6570\u8FD4\u56DE<code>Iterator</code>\u5BF9\u8C61\uFF0C\u56E0\u6B64\u6211\u4EEC\u8FD8\u53EF\u4EE5\u901A\u8FC7<code>for...of</code>\u8FDB\u884C\u904D\u5386</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token number">1</span>
  <span class="token keyword">yield</span> <span class="token number">2</span>
  <span class="token keyword">yield</span> <span class="token number">3</span>
  <span class="token keyword">yield</span> <span class="token number">4</span>
  <span class="token keyword">yield</span> <span class="token number">5</span>
  <span class="token keyword">return</span> <span class="token number">6</span>
<span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> v <span class="token keyword">of</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// 1 2 3 4 5</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u539F\u751F\u5BF9\u8C61\u6CA1\u6709\u904D\u5386\u63A5\u53E3\uFF0C\u901A\u8FC7<code>Generator </code>\u51FD\u6570\u4E3A\u5B83\u52A0\u4E0A\u8FD9\u4E2A\u63A5\u53E3\uFF0C\u5C31\u80FD\u4F7F\u7528<code>for...of</code>\u8FDB\u884C\u904D\u5386\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> propKeys <span class="token operator">=</span> Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>

  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> propKey <span class="token keyword">of</span> propKeys<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token punctuation">[</span>propKey<span class="token punctuation">,</span> obj<span class="token punctuation">[</span>propKey<span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> jane <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">first</span><span class="token operator">:</span> <span class="token string">&#39;Jane&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">last</span><span class="token operator">:</span> <span class="token string">&#39;Doe&#39;</span> <span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token function">objectEntries</span><span class="token punctuation">(</span>jane<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>key<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>value<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token comment">// first: Jane</span>
<span class="token comment">// last: Doe</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E09\u3001\u5F02\u6B65\u89E3\u51B3\u65B9\u6848" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u5F02\u6B65\u89E3\u51B3\u65B9\u6848" aria-hidden="true">#</a> \u4E09\u3001\u5F02\u6B65\u89E3\u51B3\u65B9\u6848</h2><p>\u56DE\u987E\u4E4B\u524D\u5C55\u5F00\u5F02\u6B65\u89E3\u51B3\u7684\u65B9\u6848\uFF1A</p><ul><li>\u56DE\u8C03\u51FD\u6570</li><li>Promise \u5BF9\u8C61</li><li>generator \u51FD\u6570</li><li>async/await</li></ul><p>\u8FD9\u91CC\u901A\u8FC7\u6587\u4EF6\u8BFB\u53D6\u6848\u4F8B\uFF0C\u5C06\u51E0\u79CD\u89E3\u51B3\u5F02\u6B65\u7684\u65B9\u6848\u8FDB\u884C\u4E00\u4E2A\u6BD4\u8F83\uFF1A</p><h3 id="\u56DE\u8C03\u51FD\u6570" tabindex="-1"><a class="header-anchor" href="#\u56DE\u8C03\u51FD\u6570" aria-hidden="true">#</a> \u56DE\u8C03\u51FD\u6570</h3><p>\u6240\u8C13\u56DE\u8C03\u51FD\u6570\uFF0C\u5C31\u662F\u628A\u4EFB\u52A1\u7684\u7B2C\u4E8C\u6BB5\u5355\u72EC\u5199\u5728\u4E00\u4E2A\u51FD\u6570\u91CC\u9762\uFF0C\u7B49\u5230\u91CD\u65B0\u6267\u884C\u8FD9\u4E2A\u4EFB\u52A1\u7684\u65F6\u5019\uFF0C\u518D\u8C03\u7528\u8FD9\u4E2A\u51FD\u6570</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/fstab&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/shells&#39;</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>readFile</code>\u51FD\u6570\u7684\u7B2C\u4E09\u4E2A\u53C2\u6570\uFF0C\u5C31\u662F\u56DE\u8C03\u51FD\u6570\uFF0C\u7B49\u5230\u64CD\u4F5C\u7CFB\u7EDF\u8FD4\u56DE\u4E86<code>/etc/passwd</code>\u8FD9\u4E2A\u6587\u4EF6\u4EE5\u540E\uFF0C\u56DE\u8C03\u51FD\u6570\u624D\u4F1A\u6267\u884C</p><h3 id="promise" tabindex="-1"><a class="header-anchor" href="#promise" aria-hidden="true">#</a> Promise</h3><p><code>Promise</code>\u5C31\u662F\u4E3A\u4E86\u89E3\u51B3\u56DE\u8C03\u5730\u72F1\u800C\u4EA7\u751F\u7684\uFF0C\u5C06\u56DE\u8C03\u51FD\u6570\u7684\u5D4C\u5957\uFF0C\u6539\u6210\u94FE\u5F0F\u8C03\u7528</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> <span class="token function-variable function">readFile</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fileName</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">resolve<span class="token punctuation">,</span> reject</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    fs<span class="token punctuation">.</span><span class="token function">readFile</span><span class="token punctuation">(</span>fileName<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">error<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token function">reject</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>
      <span class="token function">resolve</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/fstab&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/shells&#39;</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u79CD\u94FE\u5F0F\u64CD\u4F5C\u5F62\u5F0F\uFF0C\u4F7F\u5F02\u6B65\u4EFB\u52A1\u7684\u4E24\u6BB5\u6267\u884C\u66F4\u6E05\u695A\u4E86\uFF0C\u4F46\u662F\u4E5F\u5B58\u5728\u4E86\u5F88\u660E\u663E\u7684\u95EE\u9898\uFF0C\u4EE3\u7801\u53D8\u5F97\u5197\u6742\u4E86\uFF0C\u8BED\u4E49\u5316\u5E76\u4E0D\u5F3A</p><h3 id="generator" tabindex="-1"><a class="header-anchor" href="#generator" aria-hidden="true">#</a> generator</h3><p><code>yield</code>\u8868\u8FBE\u5F0F\u53EF\u4EE5\u6682\u505C\u51FD\u6570\u6267\u884C\uFF0C<code>next</code>\u65B9\u6CD5\u7528\u4E8E\u6062\u590D\u51FD\u6570\u6267\u884C\uFF0C\u8FD9\u4F7F\u5F97<code>Generator</code>\u51FD\u6570\u975E\u5E38\u9002\u5408\u5C06\u5F02\u6B65\u4EFB\u52A1\u540C\u6B65\u5316</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">gen</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> f1 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/fstab&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> f2 <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/shells&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="async-await" tabindex="-1"><a class="header-anchor" href="#async-await" aria-hidden="true">#</a> async/await</h3><p>\u5C06\u4E0A\u9762<code>Generator</code>\u51FD\u6570\u6539\u6210<code>async/await</code>\u5F62\u5F0F\uFF0C\u66F4\u4E3A\u7B80\u6D01\uFF0C\u8BED\u4E49\u5316\u66F4\u5F3A\u4E86</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> <span class="token function-variable function">asyncReadFile</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> f1 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/fstab&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> f2 <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">readFile</span><span class="token punctuation">(</span><span class="token string">&#39;/etc/shells&#39;</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f1<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>f2<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="\u533A\u522B" tabindex="-1"><a class="header-anchor" href="#\u533A\u522B" aria-hidden="true">#</a> \u533A\u522B\uFF1A</h3><p>\u901A\u8FC7\u4E0A\u8FF0\u4EE3\u7801\u8FDB\u884C\u5206\u6790\uFF0C\u5C06<code>promise</code>\u3001<code>Generator</code>\u3001<code>async/await</code>\u8FDB\u884C\u6BD4\u8F83\uFF1A</p><ul><li><p><code>promise</code>\u548C<code>async/await</code>\u662F\u4E13\u95E8\u7528\u4E8E\u5904\u7406\u5F02\u6B65\u64CD\u4F5C\u7684</p></li><li><p><code>Generator</code>\u5E76\u4E0D\u662F\u4E3A\u5F02\u6B65\u800C\u8BBE\u8BA1\u51FA\u6765\u7684\uFF0C\u5B83\u8FD8\u6709\u5176\u4ED6\u529F\u80FD\uFF08\u5BF9\u8C61\u8FED\u4EE3\u3001\u63A7\u5236\u8F93\u51FA\u3001\u90E8\u7F72<code>Interator</code>\u63A5\u53E3...\uFF09</p></li><li><p><code>promise</code>\u7F16\u5199\u4EE3\u7801\u76F8\u6BD4<code>Generator</code>\u3001<code>async</code>\u66F4\u4E3A\u590D\u6742\u5316\uFF0C\u4E14\u53EF\u8BFB\u6027\u4E5F\u7A0D\u5DEE</p></li><li><p><code>Generator</code>\u3001<code>async</code>\u9700\u8981\u4E0E<code>promise</code>\u5BF9\u8C61\u642D\u914D\u5904\u7406\u5F02\u6B65\u60C5\u51B5</p></li><li><p><code>async</code>\u5B9E\u8D28\u662F<code>Generator</code>\u7684\u8BED\u6CD5\u7CD6\uFF0C\u76F8\u5F53\u4E8E\u4F1A\u81EA\u52A8\u6267\u884C<code>Generator</code>\u51FD\u6570</p></li><li><p><code>async</code>\u4F7F\u7528\u4E0A\u66F4\u4E3A\u7B80\u6D01\uFF0C\u5C06\u5F02\u6B65\u4EE3\u7801\u4EE5\u540C\u6B65\u7684\u5F62\u5F0F\u8FDB\u884C\u7F16\u5199\uFF0C\u662F\u5904\u7406\u5F02\u6B65\u7F16\u7A0B\u7684\u6700\u7EC8\u65B9\u6848</p></li></ul><h2 id="\u56DB\u3001\u4F7F\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u56DB\u3001\u4F7F\u7528\u573A\u666F" aria-hidden="true">#</a> \u56DB\u3001\u4F7F\u7528\u573A\u666F</h2><p><code>Generator</code>\u662F\u5F02\u6B65\u89E3\u51B3\u7684\u4E00\u79CD\u65B9\u6848\uFF0C\u6700\u5927\u7279\u70B9\u5219\u662F\u5C06\u5F02\u6B65\u64CD\u4F5C\u540C\u6B65\u5316\u8868\u8FBE\u51FA\u6765</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">loadUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token function">showLoadingScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token keyword">yield</span> <span class="token function">loadUIDataAsynchronously</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
  <span class="token function">hideLoadingScreen</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">var</span> loader <span class="token operator">=</span> <span class="token function">loadUI</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token comment">// \u52A0\u8F7DUI</span>
loader<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token comment">// \u5378\u8F7DUI</span>
loader<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5305\u62EC<code>redux-saga </code>\u4E2D\u95F4\u4EF6\u4E5F\u5145\u5206\u5229\u7528\u4E86<code>Generator</code>\u7279\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> call<span class="token punctuation">,</span> put<span class="token punctuation">,</span> takeEvery<span class="token punctuation">,</span> takeLatest <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;redux-saga/effects&#39;</span>
<span class="token keyword">import</span> Api <span class="token keyword">from</span> <span class="token string">&#39;...&#39;</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">fetchUser</span><span class="token punctuation">(</span><span class="token parameter">action</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> user <span class="token operator">=</span> <span class="token keyword">yield</span> <span class="token function">call</span><span class="token punctuation">(</span>Api<span class="token punctuation">.</span>fetchUser<span class="token punctuation">,</span> action<span class="token punctuation">.</span>payload<span class="token punctuation">.</span>userId<span class="token punctuation">)</span>
    <span class="token keyword">yield</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;USER_FETCH_SUCCEEDED&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">user</span><span class="token operator">:</span> user <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">yield</span> <span class="token function">put</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;USER_FETCH_FAILED&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">message</span><span class="token operator">:</span> e<span class="token punctuation">.</span>message <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">mySaga</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token function">takeEvery</span><span class="token punctuation">(</span><span class="token string">&#39;USER_FETCH_REQUESTED&#39;</span><span class="token punctuation">,</span> fetchUser<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">mySaga</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">yield</span> <span class="token function">takeLatest</span><span class="token punctuation">(</span><span class="token string">&#39;USER_FETCH_REQUESTED&#39;</span><span class="token punctuation">,</span> fetchUser<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">export</span> <span class="token keyword">default</span> mySaga
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD8\u80FD\u5229\u7528<code>Generator</code>\u51FD\u6570\uFF0C\u5728\u5BF9\u8C61\u4E0A\u5B9E\u73B0<code>Iterator</code>\u63A5\u53E3</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span><span class="token operator">*</span> <span class="token function">iterEntries</span><span class="token punctuation">(</span><span class="token parameter">obj</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> keys <span class="token operator">=</span> Object<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> keys<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> key <span class="token operator">=</span> keys<span class="token punctuation">[</span>i<span class="token punctuation">]</span>
    <span class="token keyword">yield</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> myObj <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">foo</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token literal-property property">bar</span><span class="token operator">:</span> <span class="token number">7</span> <span class="token punctuation">}</span>

<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">let</span> <span class="token punctuation">[</span>key<span class="token punctuation">,</span> value<span class="token punctuation">]</span> <span class="token keyword">of</span> <span class="token function">iterEntries</span><span class="token punctuation">(</span>myObj<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> value<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token comment">// foo 3</span>
<span class="token comment">// bar 7</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,58),o=[t];function c(l,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","generator.html.vue"]]);export{r as default};
