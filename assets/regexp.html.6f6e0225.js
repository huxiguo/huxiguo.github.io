import{_ as n,o as s,c as a,d as e}from"./app.91a380bb.js";const t={},p=e(`<h1 id="\u9762\u8BD5\u5B98-\u8BF4\u8BF4\u4F60\u5BF9\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u7406\u89E3-\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u9762\u8BD5\u5B98-\u8BF4\u8BF4\u4F60\u5BF9\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u7406\u89E3-\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> \u9762\u8BD5\u5B98\uFF1A\u8BF4\u8BF4\u4F60\u5BF9\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u7406\u89E3\uFF1F\u5E94\u7528\u573A\u666F\uFF1F</h1><p><img src="https://static.vue-js.com/55388a40-7f1d-11eb-ab90-d9ae814b240d.png" alt=""></p><h2 id="\u4E00\u3001\u662F\u4EC0\u4E48" tabindex="-1"><a class="header-anchor" href="#\u4E00\u3001\u662F\u4EC0\u4E48" aria-hidden="true">#</a> \u4E00\u3001\u662F\u4EC0\u4E48</h2><p>\u6B63\u5219\u8868\u8FBE\u5F0F\u662F\u4E00\u79CD\u7528\u6765\u5339\u914D\u5B57\u7B26\u4E32\u7684\u5F3A\u6709\u529B\u7684\u6B66\u5668</p><p>\u5B83\u7684\u8BBE\u8BA1\u601D\u60F3\u662F\u7528\u4E00\u79CD\u63CF\u8FF0\u6027\u7684\u8BED\u8A00\u5B9A\u4E49\u4E00\u4E2A\u89C4\u5219\uFF0C\u51E1\u662F\u7B26\u5408\u89C4\u5219\u7684\u5B57\u7B26\u4E32\uFF0C\u6211\u4EEC\u5C31\u8BA4\u4E3A\u5B83\u201C\u5339\u914D\u201D\u4E86\uFF0C\u5426\u5219\uFF0C\u8BE5\u5B57\u7B26\u4E32\u5C31\u662F\u4E0D\u5408\u6CD5\u7684</p><p>\u5728 <code>JavaScript</code>\u4E2D\uFF0C\u6B63\u5219\u8868\u8FBE\u5F0F\u4E5F\u662F\u5BF9\u8C61\uFF0C\u6784\u5EFA\u6B63\u5219\u8868\u8FBE\u5F0F\u6709\u4E24\u79CD\u65B9\u5F0F\uFF1A</p><ol><li>\u5B57\u9762\u91CF\u521B\u5EFA\uFF0C\u5176\u7531\u5305\u542B\u5728\u659C\u6760\u4E4B\u95F4\u7684\u6A21\u5F0F\u7EC4\u6210</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> re <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\\d+</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol start="2"><li>\u8C03\u7528<code>RegExp</code>\u5BF9\u8C61\u7684\u6784\u9020\u51FD\u6570</li></ol><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> re <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;\\\\d+&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> rul <span class="token operator">=</span> <span class="token string">&#39;\\\\d+&#39;</span>
<span class="token keyword">const</span> re1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span>rul<span class="token punctuation">,</span> <span class="token string">&#39;g&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u4F7F\u7528\u6784\u5EFA\u51FD\u6570\u521B\u5EFA\uFF0C\u7B2C\u4E00\u4E2A\u53C2\u6570\u53EF\u4EE5\u662F\u4E00\u4E2A\u53D8\u91CF\uFF0C\u9047\u5230\u7279\u6B8A\u5B57\u7B26<code>\\</code>\u9700\u8981\u4F7F\u7528<code>\\\\</code>\u8FDB\u884C\u8F6C\u4E49</p><h2 id="\u4E8C\u3001\u5339\u914D\u89C4\u5219" tabindex="-1"><a class="header-anchor" href="#\u4E8C\u3001\u5339\u914D\u89C4\u5219" aria-hidden="true">#</a> \u4E8C\u3001\u5339\u914D\u89C4\u5219</h2><p>\u5E38\u89C1\u7684\u6821\u9A8C\u89C4\u5219\u5982\u4E0B\uFF1A</p><table><thead><tr><th>\u89C4\u5219</th><th>\u63CF\u8FF0</th></tr></thead><tbody><tr><td>\\</td><td>\u8F6C\u4E49</td></tr><tr><td>^</td><td>\u5339\u914D\u8F93\u5165\u7684\u5F00\u59CB</td></tr><tr><td>$</td><td>\u5339\u914D\u8F93\u5165\u7684\u7ED3\u675F</td></tr><tr><td>*</td><td>\u5339\u914D\u524D\u4E00\u4E2A\u8868\u8FBE\u5F0F 0 \u6B21\u6216\u591A\u6B21</td></tr><tr><td>+</td><td>\u5339\u914D\u524D\u9762\u4E00\u4E2A\u8868\u8FBE\u5F0F 1 \u6B21\u6216\u8005\u591A\u6B21\u3002\u7B49\u4EF7\u4E8E <code>{1,}</code></td></tr><tr><td>?</td><td>\u5339\u914D\u524D\u9762\u4E00\u4E2A\u8868\u8FBE\u5F0F 0 \u6B21\u6216\u8005 1 \u6B21\u3002\u7B49\u4EF7\u4E8E<code>{0,1}</code></td></tr><tr><td>.</td><td>\u9ED8\u8BA4\u5339\u914D\u9664\u6362\u884C\u7B26\u4E4B\u5916\u7684\u4EFB\u4F55\u5355\u4E2A\u5B57\u7B26</td></tr><tr><td>x(?=y)</td><td>\u5339\u914D&#39;x&#39;\u4EC5\u4EC5\u5F53&#39;x&#39;\u540E\u9762\u8DDF\u7740&#39;y&#39;\u3002\u8FD9\u79CD\u53EB\u505A\u5148\u884C\u65AD\u8A00</td></tr><tr><td>(?&lt;=y)x</td><td>\u5339\u914D&#39;x&#39;\u4EC5\u5F53&#39;x&#39;\u524D\u9762\u662F&#39;y&#39;.\u8FD9\u79CD\u53EB\u505A\u540E\u884C\u65AD\u8A00</td></tr><tr><td>x(?!y)</td><td>\u4EC5\u4EC5\u5F53&#39;x&#39;\u540E\u9762\u4E0D\u8DDF\u7740&#39;y&#39;\u65F6\u5339\u914D&#39;x&#39;\uFF0C\u8FD9\u88AB\u79F0\u4E3A\u6B63\u5411\u5426\u5B9A\u67E5\u627E</td></tr><tr><td>(?&lt;!<em>y</em>)<em>x</em></td><td>\u4EC5\u4EC5\u5F53&#39;x&#39;\u524D\u9762\u4E0D\u662F&#39;y&#39;\u65F6\u5339\u914D&#39;x&#39;\uFF0C\u8FD9\u88AB\u79F0\u4E3A\u53CD\u5411\u5426\u5B9A\u67E5\u627E</td></tr><tr><td>x|y</td><td>\u5339\u914D\u2018x\u2019\u6216\u8005\u2018y\u2019</td></tr><tr><td>{n}</td><td>n \u662F\u4E00\u4E2A\u6B63\u6574\u6570\uFF0C\u5339\u914D\u4E86\u524D\u9762\u4E00\u4E2A\u5B57\u7B26\u521A\u597D\u51FA\u73B0\u4E86 n \u6B21</td></tr><tr><td>{n,}</td><td>n \u662F\u4E00\u4E2A\u6B63\u6574\u6570\uFF0C\u5339\u914D\u524D\u4E00\u4E2A\u5B57\u7B26\u81F3\u5C11\u51FA\u73B0\u4E86 n \u6B21</td></tr><tr><td>{n,m}</td><td>n \u548C m \u90FD\u662F\u6574\u6570\u3002\u5339\u914D\u524D\u9762\u7684\u5B57\u7B26\u81F3\u5C11 n \u6B21\uFF0C\u6700\u591A m \u6B21</td></tr><tr><td>[xyz]</td><td>\u4E00\u4E2A\u5B57\u7B26\u96C6\u5408\u3002\u5339\u914D\u65B9\u62EC\u53F7\u4E2D\u7684\u4EFB\u610F\u5B57\u7B26</td></tr><tr><td>[^xyz]</td><td>\u5339\u914D\u4EFB\u4F55\u6CA1\u6709\u5305\u542B\u5728\u65B9\u62EC\u53F7\u4E2D\u7684\u5B57\u7B26</td></tr><tr><td>\\b</td><td>\u5339\u914D\u4E00\u4E2A\u8BCD\u7684\u8FB9\u754C\uFF0C\u4F8B\u5982\u5728\u5B57\u6BCD\u548C\u7A7A\u683C\u4E4B\u95F4</td></tr><tr><td>\\B</td><td>\u5339\u914D\u4E00\u4E2A\u975E\u5355\u8BCD\u8FB9\u754C</td></tr><tr><td>\\d</td><td>\u5339\u914D\u4E00\u4E2A\u6570\u5B57</td></tr><tr><td>\\D</td><td>\u5339\u914D\u4E00\u4E2A\u975E\u6570\u5B57\u5B57\u7B26</td></tr><tr><td>\\f</td><td>\u5339\u914D\u4E00\u4E2A\u6362\u9875\u7B26</td></tr><tr><td>\\n</td><td>\u5339\u914D\u4E00\u4E2A\u6362\u884C\u7B26</td></tr><tr><td>\\r</td><td>\u5339\u914D\u4E00\u4E2A\u56DE\u8F66\u7B26</td></tr><tr><td>\\s</td><td>\u5339\u914D\u4E00\u4E2A\u7A7A\u767D\u5B57\u7B26\uFF0C\u5305\u62EC\u7A7A\u683C\u3001\u5236\u8868\u7B26\u3001\u6362\u9875\u7B26\u548C\u6362\u884C\u7B26</td></tr><tr><td>\\S</td><td>\u5339\u914D\u4E00\u4E2A\u975E\u7A7A\u767D\u5B57\u7B26</td></tr><tr><td>\\w</td><td>\u5339\u914D\u4E00\u4E2A\u5355\u5B57\u5B57\u7B26\uFF08\u5B57\u6BCD\u3001\u6570\u5B57\u6216\u8005\u4E0B\u5212\u7EBF\uFF09</td></tr><tr><td>\\W</td><td>\u5339\u914D\u4E00\u4E2A\u975E\u5355\u5B57\u5B57\u7B26</td></tr></tbody></table><h3 id="\u6B63\u5219\u8868\u8FBE\u5F0F\u6807\u8BB0" tabindex="-1"><a class="header-anchor" href="#\u6B63\u5219\u8868\u8FBE\u5F0F\u6807\u8BB0" aria-hidden="true">#</a> \u6B63\u5219\u8868\u8FBE\u5F0F\u6807\u8BB0</h3><table><thead><tr><th style="text-align:left;">\u6807\u5FD7</th><th style="text-align:left;">\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:left;"><code>g</code></td><td style="text-align:left;">\u5168\u5C40\u641C\u7D22\u3002</td></tr><tr><td style="text-align:left;"><code>i</code></td><td style="text-align:left;">\u4E0D\u533A\u5206\u5927\u5C0F\u5199\u641C\u7D22\u3002</td></tr><tr><td style="text-align:left;"><code>m</code></td><td style="text-align:left;">\u591A\u884C\u641C\u7D22\u3002</td></tr><tr><td style="text-align:left;"><code>s</code></td><td style="text-align:left;">\u5141\u8BB8 <code>.</code> \u5339\u914D\u6362\u884C\u7B26\u3002</td></tr><tr><td style="text-align:left;"><code>u</code></td><td style="text-align:left;">\u4F7F\u7528<code>unicode</code>\u7801\u7684\u6A21\u5F0F\u8FDB\u884C\u5339\u914D\u3002</td></tr><tr><td style="text-align:left;"><code>y</code></td><td style="text-align:left;">\u6267\u884C\u201C\u7C98\u6027(<code>sticky</code>)\u201D\u641C\u7D22,\u5339\u914D\u4ECE\u76EE\u6807\u5B57\u7B26\u4E32\u7684\u5F53\u524D\u4F4D\u7F6E\u5F00\u59CB\u3002</td></tr></tbody></table><p>\u4F7F\u7528\u65B9\u6CD5\u5982\u4E0B\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> re <span class="token operator">=</span> <span class="token operator">/</span>pattern<span class="token operator">/</span>flags<span class="token punctuation">;</span>
<span class="token keyword">var</span> re <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&quot;pattern&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;flags&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5728\u4E86\u89E3\u4E0B\u6B63\u5219\u8868\u8FBE\u5F0F\u57FA\u672C\u7684\u4E4B\u5916\uFF0C\u8FD8\u53EF\u4EE5\u638C\u63E1\u51E0\u4E2A\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u7279\u6027\uFF1A</p><h3 id="\u8D2A\u5A6A\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u8D2A\u5A6A\u6A21\u5F0F" aria-hidden="true">#</a> \u8D2A\u5A6A\u6A21\u5F0F</h3><p>\u5728\u4E86\u89E3\u8D2A\u5A6A\u6A21\u5F0F\u524D\uFF0C\u9996\u5148\u4E3E\u4E2A\u4F8B\u5B50\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">ab{1,3}c</span><span class="token regex-delimiter">/</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>\u5728\u5339\u914D\u8FC7\u7A0B\u4E2D\uFF0C\u5C1D\u8BD5\u53EF\u80FD\u7684\u987A\u5E8F\u662F\u4ECE\u591A\u5F80\u5C11\u7684\u65B9\u5411\u53BB\u5C1D\u8BD5\u3002\u9996\u5148\u4F1A\u5C1D\u8BD5<code>bbb</code>\uFF0C\u7136\u540E\u518D\u770B\u6574\u4E2A\u6B63\u5219\u662F\u5426\u80FD\u5339\u914D\u3002\u4E0D\u80FD\u5339\u914D\u65F6\uFF0C\u5410\u51FA\u4E00\u4E2A<code>b</code>\uFF0C\u5373\u5728<code>bb</code>\u7684\u57FA\u7840\u4E0A\uFF0C\u518D\u7EE7\u7EED\u5C1D\u8BD5\uFF0C\u4EE5\u6B64\u91CD\u590D</p><p>\u5982\u679C\u591A\u4E2A\u8D2A\u5A6A\u91CF\u8BCD\u6328\u7740\uFF0C\u5219\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> string <span class="token operator">=</span> <span class="token string">&#39;12345&#39;</span>
<span class="token keyword">const</span> regx <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d{1,3})(\\d{1,3})</span><span class="token regex-delimiter">/</span></span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>reg<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [&quot;12345&quot;, &quot;123&quot;, &quot;45&quot;, index: 0, input: &quot;12345&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D\uFF0C\u524D\u9762\u7684<code>\\d{1,3}</code>\u5339\u914D\u7684\u662F&quot;123&quot;\uFF0C\u540E\u9762\u7684<code>\\d{1,3}</code>\u5339\u914D\u7684\u662F&quot;45&quot;</p><h3 id="\u61D2\u60F0\u6A21\u5F0F" tabindex="-1"><a class="header-anchor" href="#\u61D2\u60F0\u6A21\u5F0F" aria-hidden="true">#</a> \u61D2\u60F0\u6A21\u5F0F</h3><p>\u60F0\u6027\u91CF\u8BCD\u5C31\u662F\u5728\u8D2A\u5A6A\u91CF\u8BCD\u540E\u9762\u52A0\u4E2A\u95EE\u53F7\u3002\u8868\u793A\u5C3D\u53EF\u80FD\u5C11\u7684\u5339\u914D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> string <span class="token operator">=</span> <span class="token string">&#39;12345&#39;</span>
<span class="token keyword">var</span> regex <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(\\d{1,3}?)(\\d{1,3})</span><span class="token regex-delimiter">/</span></span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>string<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span>regex<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// =&gt; [&quot;1234&quot;, &quot;1&quot;, &quot;234&quot;, index: 0, input: &quot;12345&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5176\u4E2D<code>\\d{1,3}?</code>\u53EA\u5339\u914D\u5230\u4E00\u4E2A\u5B57\u7B26&quot;1&quot;\uFF0C\u800C\u540E\u9762\u7684<code>\\d{1,3}</code>\u5339\u914D\u4E86&quot;234&quot;</p><h3 id="\u5206\u7EC4" tabindex="-1"><a class="header-anchor" href="#\u5206\u7EC4" aria-hidden="true">#</a> \u5206\u7EC4</h3><p>\u5206\u7EC4\u4E3B\u8981\u662F\u7528\u8FC7<code>()</code>\u8FDB\u884C\u5B9E\u73B0\uFF0C\u6BD4\u5982<code>beyond{3}</code>\uFF0C\u662F\u5339\u914D<code>d</code>\u5B57\u6BCD 3 \u6B21\u3002\u800C<code>(beyond){3}</code>\u662F\u5339\u914D<code>beyond</code>\u4E09\u6B21</p><p>\u5728<code>()</code>\u5185\u4F7F\u7528<code>|</code>\u8FBE\u5230\u6216\u7684\u6548\u679C\uFF0C\u5982<code>(abc | xxx)</code>\u53EF\u4EE5\u5339\u914D<code>abc</code>\u6216\u8005<code>xxx</code></p><p>\u53CD\u5411\u5F15\u7528\uFF0C\u5DE7\u7528<code>$</code>\u5206\u7EC4\u6355\u83B7</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;John Smith&#39;</span>

<span class="token comment">// \u4EA4\u6362\u540D\u5B57\u548C\u59D3\u6C0F</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(john) (smith)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">,</span> <span class="token string">&#39;$2, $1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// Smith, John</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4E09\u3001\u5339\u914D\u65B9\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u4E09\u3001\u5339\u914D\u65B9\u6CD5" aria-hidden="true">#</a> \u4E09\u3001\u5339\u914D\u65B9\u6CD5</h2><p>\u6B63\u5219\u8868\u8FBE\u5F0F\u5E38\u88AB\u7528\u4E8E\u67D0\u4E9B\u65B9\u6CD5\uFF0C\u6211\u4EEC\u53EF\u4EE5\u5206\u6210\u4E24\u7C7B\uFF1A</p><ul><li>\u5B57\u7B26\u4E32\uFF08str\uFF09\u65B9\u6CD5\uFF1A<code>match</code>\u3001<code>matchAll</code>\u3001<code>search</code>\u3001<code>replace</code>\u3001<code>split</code></li><li>\u6B63\u5219\u5BF9\u8C61\u4E0B\uFF08regexp\uFF09\u7684\u65B9\u6CD5\uFF1A<code>test</code>\u3001<code>exec</code></li></ul><table><thead><tr><th style="text-align:left;">\u65B9\u6CD5</th><th style="text-align:left;">\u63CF\u8FF0</th></tr></thead><tbody><tr><td style="text-align:left;">exec</td><td style="text-align:left;">\u4E00\u4E2A\u5728\u5B57\u7B26\u4E32\u4E2D\u6267\u884C\u67E5\u627E\u5339\u914D\u7684 RegExp \u65B9\u6CD5\uFF0C\u5B83\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF08\u672A\u5339\u914D\u5230\u5219\u8FD4\u56DE null\uFF09\u3002</td></tr><tr><td style="text-align:left;">test</td><td style="text-align:left;">\u4E00\u4E2A\u5728\u5B57\u7B26\u4E32\u4E2D\u6D4B\u8BD5\u662F\u5426\u5339\u914D\u7684 RegExp \u65B9\u6CD5\uFF0C\u5B83\u8FD4\u56DE true \u6216 false\u3002</td></tr><tr><td style="text-align:left;">match</td><td style="text-align:left;">\u4E00\u4E2A\u5728\u5B57\u7B26\u4E32\u4E2D\u6267\u884C\u67E5\u627E\u5339\u914D\u7684 String \u65B9\u6CD5\uFF0C\u5B83\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4\uFF0C\u5728\u672A\u5339\u914D\u5230\u65F6\u4F1A\u8FD4\u56DE null\u3002</td></tr><tr><td style="text-align:left;">matchAll</td><td style="text-align:left;">\u4E00\u4E2A\u5728\u5B57\u7B26\u4E32\u4E2D\u6267\u884C\u67E5\u627E\u6240\u6709\u5339\u914D\u7684 String \u65B9\u6CD5\uFF0C\u5B83\u8FD4\u56DE\u4E00\u4E2A\u8FED\u4EE3\u5668\uFF08iterator\uFF09\u3002</td></tr><tr><td style="text-align:left;">search</td><td style="text-align:left;">\u4E00\u4E2A\u5728\u5B57\u7B26\u4E32\u4E2D\u6D4B\u8BD5\u5339\u914D\u7684 String \u65B9\u6CD5\uFF0C\u5B83\u8FD4\u56DE\u5339\u914D\u5230\u7684\u4F4D\u7F6E\u7D22\u5F15\uFF0C\u6216\u8005\u5728\u5931\u8D25\u65F6\u8FD4\u56DE-1\u3002</td></tr><tr><td style="text-align:left;">replace</td><td style="text-align:left;">\u4E00\u4E2A\u5728\u5B57\u7B26\u4E32\u4E2D\u6267\u884C\u67E5\u627E\u5339\u914D\u7684 String \u65B9\u6CD5\uFF0C\u5E76\u4E14\u4F7F\u7528\u66FF\u6362\u5B57\u7B26\u4E32\u66FF\u6362\u6389\u5339\u914D\u5230\u7684\u5B50\u5B57\u7B26\u4E32\u3002</td></tr><tr><td style="text-align:left;">split</td><td style="text-align:left;">\u4E00\u4E2A\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\u6216\u8005\u4E00\u4E2A\u56FA\u5B9A\u5B57\u7B26\u4E32\u5206\u9694\u4E00\u4E2A\u5B57\u7B26\u4E32\uFF0C\u5E76\u5C06\u5206\u9694\u540E\u7684\u5B50\u5B57\u7B26\u4E32\u5B58\u50A8\u5230\u6570\u7EC4\u4E2D\u7684 <code>String</code> \u65B9\u6CD5\u3002</td></tr></tbody></table><h3 id="str-match-regexp" tabindex="-1"><a class="header-anchor" href="#str-match-regexp" aria-hidden="true">#</a> str.match(regexp)</h3><p><code>str.match(regexp)</code> \u65B9\u6CD5\u5728\u5B57\u7B26\u4E32 <code>str</code> \u4E2D\u627E\u5230\u5339\u914D <code>regexp</code> \u7684\u5B57\u7B26</p><p>\u5982\u679C <code>regexp</code> \u4E0D\u5E26\u6709 <code>g</code> \u6807\u8BB0\uFF0C\u5219\u5B83\u4EE5\u6570\u7EC4\u7684\u5F62\u5F0F\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u5339\u914D\u9879\uFF0C\u5176\u4E2D\u5305\u542B\u5206\u7EC4\u548C\u5C5E\u6027 <code>index</code>\uFF08\u5339\u914D\u9879\u7684\u4F4D\u7F6E\uFF09\u3001<code>input</code>\uFF08\u8F93\u5165\u5B57\u7B26\u4E32\uFF0C\u7B49\u4E8E <code>str</code>\uFF09</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;I love JavaScript&#39;</span>

<span class="token keyword">let</span> result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Java(Script)</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// JavaScript\uFF08\u5B8C\u5168\u5339\u914D\uFF09</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// Script\uFF08\u7B2C\u4E00\u4E2A\u5206\u7EC4\uFF09</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 2</span>

<span class="token comment">// \u5176\u4ED6\u4FE1\u606F\uFF1A</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>index<span class="token punctuation">)</span> <span class="token comment">// 7\uFF08\u5339\u914D\u4F4D\u7F6E\uFF09</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>input<span class="token punctuation">)</span> <span class="token comment">// I love JavaScript\uFF08\u6E90\u5B57\u7B26\u4E32\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C <code>regexp</code> \u5E26\u6709 <code>g</code> \u6807\u8BB0\uFF0C\u5219\u5B83\u5C06\u6240\u6709\u5339\u914D\u9879\u7684\u6570\u7EC4\u4F5C\u4E3A\u5B57\u7B26\u4E32\u8FD4\u56DE\uFF0C\u800C\u4E0D\u5305\u542B\u5206\u7EC4\u548C\u5176\u4ED6\u8BE6\u7EC6\u4FE1\u606F</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;I love JavaScript&#39;</span>

<span class="token keyword">let</span> result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">Java(Script)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// JavaScript</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">.</span>length<span class="token punctuation">)</span> <span class="token comment">// 1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5982\u679C\u6CA1\u6709\u5339\u914D\u9879\uFF0C\u5219\u65E0\u8BBA\u662F\u5426\u5E26\u6709\u6807\u8BB0 <code>g</code> \uFF0C\u90FD\u5C06\u8FD4\u56DE <code>null</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;I love JavaScript&#39;</span>

<span class="token keyword">let</span> result <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">match</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">HTML</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token comment">// null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="str-matchall-regexp" tabindex="-1"><a class="header-anchor" href="#str-matchall-regexp" aria-hidden="true">#</a> str.matchAll(regexp)</h3><p>\u8FD4\u56DE\u4E00\u4E2A\u5305\u542B\u6240\u6709\u5339\u914D\u6B63\u5219\u8868\u8FBE\u5F0F\u7684\u7ED3\u679C\u53CA\u5206\u7EC4\u6355\u83B7\u7EC4\u7684\u8FED\u4EE3\u5668</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> regexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">t(e)(st(\\d?))</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span>
<span class="token keyword">const</span> str <span class="token operator">=</span> <span class="token string">&#39;test1test2&#39;</span>

<span class="token keyword">const</span> array <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">...</span>str<span class="token punctuation">.</span><span class="token function">matchAll</span><span class="token punctuation">(</span>regexp<span class="token punctuation">)</span><span class="token punctuation">]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// expected output: Array [&quot;test1&quot;, &quot;e&quot;, &quot;st1&quot;, &quot;1&quot;]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
<span class="token comment">// expected output: Array [&quot;test2&quot;, &quot;e&quot;, &quot;st2&quot;, &quot;2&quot;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="str-search-regexp" tabindex="-1"><a class="header-anchor" href="#str-search-regexp" aria-hidden="true">#</a> str.search(regexp)</h3><p>\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u5339\u914D\u9879\u7684\u4F4D\u7F6E\uFF0C\u5982\u679C\u672A\u627E\u5230\uFF0C\u5219\u8FD4\u56DE <code>-1</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;A drop of ink may make a million think&#39;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>str<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">ink</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// 10\uFF08\u7B2C\u4E00\u4E2A\u5339\u914D\u4F4D\u7F6E\uFF09</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u8FD9\u91CC\u9700\u8981\u6CE8\u610F\u7684\u662F\uFF0C<code>search</code> \u4EC5\u67E5\u627E\u7B2C\u4E00\u4E2A\u5339\u914D\u9879</p><h2 id="str-replace-regexp" tabindex="-1"><a class="header-anchor" href="#str-replace-regexp" aria-hidden="true">#</a> str.replace(regexp)</h2><p>\u66FF\u6362\u4E0E\u6B63\u5219\u8868\u8FBE\u5F0F\u5339\u914D\u7684\u5B50\u4E32\uFF0C\u5E76\u8FD4\u56DE\u66FF\u6362\u540E\u7684\u5B57\u7B26\u4E32\u3002\u5728\u4E0D\u8BBE\u7F6E\u5168\u5C40\u5339\u914D<code>g</code>\u7684\u65F6\u5019\uFF0C\u53EA\u66FF\u6362\u7B2C\u4E00\u4E2A\u5339\u914D\u6210\u529F\u7684\u5B57\u7B26\u4E32\u7247\u6BB5</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> reg1 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">javascript</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span>
<span class="token keyword">const</span> reg2 <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">javascript</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello Javascript Javascript Javascript&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg1<span class="token punctuation">,</span> <span class="token string">&#39;js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//hello js Javascript Javascript</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;hello Javascript Javascript Javascript&#39;</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span>reg2<span class="token punctuation">,</span> <span class="token string">&#39;js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//hello js js js</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="str-split-regexp" tabindex="-1"><a class="header-anchor" href="#str-split-regexp" aria-hidden="true">#</a> str.split(regexp)</h3><p>\u4F7F\u7528\u6B63\u5219\u8868\u8FBE\u5F0F\uFF08\u6216\u5B50\u5B57\u7B26\u4E32\uFF09\u4F5C\u4E3A\u5206\u9694\u7B26\u6765\u5206\u5272\u5B57\u7B26\u4E32</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;12, 34, 56&#39;</span><span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">,\\s*</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// \u6570\u7EC4 [&#39;12&#39;, &#39;34&#39;, &#39;56&#39;]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="regexp-exec-str" tabindex="-1"><a class="header-anchor" href="#regexp-exec-str" aria-hidden="true">#</a> regexp.exec(str)</h3><p><code>regexp.exec(str)</code> \u65B9\u6CD5\u8FD4\u56DE\u5B57\u7B26\u4E32 <code>str</code> \u4E2D\u7684 <code>regexp</code> \u5339\u914D\u9879\uFF0C\u4E0E\u4EE5\u524D\u7684\u65B9\u6CD5\u4E0D\u540C\uFF0C\u5B83\u662F\u5728\u6B63\u5219\u8868\u8FBE\u5F0F\u800C\u4E0D\u662F\u5B57\u7B26\u4E32\u4E0A\u8C03\u7528\u7684</p><p>\u6839\u636E\u6B63\u5219\u8868\u8FBE\u5F0F\u662F\u5426\u5E26\u6709\u6807\u5FD7 <code>g</code>\uFF0C\u5B83\u7684\u884C\u4E3A\u6709\u6240\u4E0D\u540C</p><p>\u5982\u679C\u6CA1\u6709 <code>g</code>\uFF0C\u90A3\u4E48 <code>regexp.exec(str)</code> \u8FD4\u56DE\u7684\u7B2C\u4E00\u4E2A\u5339\u914D\u4E0E <code>str.match(regexp)</code> \u5B8C\u5168\u76F8\u540C</p><p>\u5982\u679C\u6709\u6807\u8BB0 <code>g</code>\uFF0C\u8C03\u7528 <code>regexp.exec(str)</code> \u4F1A\u8FD4\u56DE\u7B2C\u4E00\u4E2A\u5339\u914D\u9879\uFF0C\u5E76\u5C06\u7D27\u968F\u5176\u540E\u7684\u4F4D\u7F6E\u4FDD\u5B58\u5728\u5C5E\u6027<code>regexp.lastIndex</code> \u4E2D\u3002 \u4E0B\u4E00\u6B21\u540C\u6837\u7684\u8C03\u7528\u4F1A\u4ECE\u4F4D\u7F6E <code>regexp.lastIndex</code> \u5F00\u59CB\u641C\u7D22\uFF0C\u8FD4\u56DE\u4E0B\u4E00\u4E2A\u5339\u914D\u9879\uFF0C\u5E76\u5C06\u5176\u540E\u7684\u4F4D\u7F6E\u4FDD\u5B58\u5728 <code>regexp.lastIndex</code> \u4E2D</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;More about JavaScript at https://javascript.info&#39;</span>
<span class="token keyword">let</span> regexp <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">javascript</span><span class="token regex-delimiter">/</span><span class="token regex-flags">gi</span></span>

<span class="token keyword">let</span> result

<span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>result <span class="token operator">=</span> regexp<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Found </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> at position </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>result<span class="token punctuation">.</span>index<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
  <span class="token comment">// Found JavaScript at position 11</span>
  <span class="token comment">// Found javascript at position 33</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="regexp-test-str" tabindex="-1"><a class="header-anchor" href="#regexp-test-str" aria-hidden="true">#</a> regexp.test(str)</h3><p>\u67E5\u627E\u5339\u914D\u9879\uFF0C\u7136\u540E\u8FD4\u56DE <code>true/false</code> \u8868\u793A\u662F\u5426\u5B58\u5728</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> str <span class="token operator">=</span> <span class="token string">&#39;I love JavaScript&#39;</span>

<span class="token comment">// \u8FD9\u4E24\u4E2A\u6D4B\u8BD5\u76F8\u540C</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">love</span><span class="token regex-delimiter">/</span><span class="token regex-flags">i</span></span><span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u56DB\u3001\u5E94\u7528\u573A\u666F" tabindex="-1"><a class="header-anchor" href="#\u56DB\u3001\u5E94\u7528\u573A\u666F" aria-hidden="true">#</a> \u56DB\u3001\u5E94\u7528\u573A\u666F</h2><p>\u901A\u8FC7\u4E0A\u9762\u7684\u5B66\u4E60\uFF0C\u6211\u4EEC\u5BF9\u6B63\u5219\u8868\u8FBE\u5F0F\u6709\u4E86\u4E00\u5B9A\u7684\u4E86\u89E3</p><p>\u4E0B\u9762\u518D\u6765\u770B\u770B\u6B63\u5219\u8868\u8FBE\u5F0F\u4E00\u4E9B\u6848\u4F8B\u573A\u666F\uFF1A</p><p>\u9A8C\u8BC1 QQ \u5408\u6CD5\u6027\uFF085~15 \u4F4D\u3001\u5168\u662F\u6570\u5B57\u3001\u4E0D\u4EE5 0 \u5F00\u5934\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[1-9][0-9]{4,14}$</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">const</span> isvalid <span class="token operator">=</span> patrn<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6821\u9A8C\u7528\u6237\u8D26\u53F7\u5408\u6CD5\u6027\uFF08\u53EA\u80FD\u8F93\u5165 5-20 \u4E2A\u4EE5\u5B57\u6BCD\u5F00\u5934\u3001\u53EF\u5E26\u6570\u5B57\u3001\u201C_\u201D\u3001\u201C.\u201D\u7684\u5B57\u4E32\uFF09\uFF1A</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">var</span> patrn <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[a-zA-Z]{1}([a-zA-Z0-9]|[._]){4,19}$</span><span class="token regex-delimiter">/</span></span>
<span class="token keyword">const</span> isvalid <span class="token operator">=</span> patrn<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>\u5C06<code>url</code>\u53C2\u6570\u89E3\u6790\u4E3A\u5BF9\u8C61</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> protocol <span class="token operator">=</span> <span class="token string">&#39;(?&lt;protocol&gt;https?:)&#39;</span>
<span class="token keyword">const</span> host <span class="token operator">=</span> <span class="token string">&#39;(?&lt;host&gt;(?&lt;hostname&gt;[^/#?:]+)(?::(?&lt;port&gt;\\\\d+))?)&#39;</span>
<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token string">&#39;(?&lt;pathname&gt;(?:\\\\/[^/#?]+)*\\\\/?)&#39;</span>
<span class="token keyword">const</span> search <span class="token operator">=</span> <span class="token string">&#39;(?&lt;search&gt;(?:\\\\?[^#]*)?)&#39;</span>
<span class="token keyword">const</span> hash <span class="token operator">=</span> <span class="token string">&#39;(?&lt;hash&gt;(?:#.*)?)&#39;</span>
<span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">^</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>protocol<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\/\\/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>host<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>path<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>search<span class="token interpolation-punctuation punctuation">}</span></span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>hash<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">$</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span>
<span class="token keyword">function</span> <span class="token function">execURL</span><span class="token punctuation">(</span><span class="token parameter">url</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">.</span>groups<span class="token punctuation">.</span>port <span class="token operator">=</span> result<span class="token punctuation">.</span>groups<span class="token punctuation">.</span>port <span class="token operator">||</span> <span class="token string">&#39;&#39;</span>
    <span class="token keyword">return</span> result<span class="token punctuation">.</span>groups
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> <span class="token punctuation">{</span>
    <span class="token literal-property property">protocol</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">pathname</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">search</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">execURL</span><span class="token punctuation">(</span><span class="token string">&#39;https://localhost:8080/?a=b#xxxx&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token literal-property property">protocol</span><span class="token operator">:</span> <span class="token string">&#39;https:&#39;</span>
<span class="token literal-property property">host</span><span class="token operator">:</span> <span class="token string">&#39;localhost:8080&#39;</span>
<span class="token literal-property property">hostname</span><span class="token operator">:</span> <span class="token string">&#39;localhost&#39;</span>
<span class="token literal-property property">port</span><span class="token operator">:</span> <span class="token string">&#39;8080&#39;</span>
<span class="token literal-property property">pathname</span><span class="token operator">:</span> <span class="token string">&#39;/&#39;</span>
<span class="token literal-property property">search</span><span class="token operator">:</span> <span class="token string">&#39;?a=b&#39;</span>
<span class="token literal-property property">hash</span><span class="token operator">:</span> <span class="token string">&#39;#xxxx&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u518D\u5C06\u4E0A\u9762\u7684<code>search</code>\u548C<code>hash</code>\u8FDB\u884C\u89E3\u6790</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">execUrlParams</span><span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  str <span class="token operator">=</span> str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^[#?&amp;]</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">)</span>
  <span class="token keyword">const</span> result <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>str<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//\u5982\u679C\u6B63\u5219\u53EF\u80FD\u914D\u5230\u7A7A\u5B57\u7B26\u4E32\uFF0C\u6781\u6709\u53EF\u80FD\u9020\u6210\u6B7B\u5FAA\u73AF\uFF0C\u5224\u65AD\u5F88\u91CD\u8981</span>
    <span class="token keyword">return</span> result
  <span class="token punctuation">}</span>
  <span class="token keyword">const</span> reg <span class="token operator">=</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">(?:^|&amp;)([^&amp;=]*)=?([^&amp;]*?)(?=&amp;|$)</span><span class="token regex-delimiter">/</span><span class="token regex-flags">y</span></span>
  <span class="token keyword">let</span> exec <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
  <span class="token keyword">while</span> <span class="token punctuation">(</span>exec<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    result<span class="token punctuation">[</span>exec<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> exec<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>
    exec <span class="token operator">=</span> reg<span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> result
<span class="token punctuation">}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">execUrlParams</span><span class="token punctuation">(</span><span class="token string">&#39;#&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// {}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">execUrlParams</span><span class="token punctuation">(</span><span class="token string">&#39;##&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//{&#39;#&#39;:&#39;&#39;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">execUrlParams</span><span class="token punctuation">(</span><span class="token string">&#39;?q=3606&amp;src=srp&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//{q: &quot;3606&quot;, src: &quot;srp&quot;}</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token function">execUrlParams</span><span class="token punctuation">(</span><span class="token string">&#39;test=a=b=c&amp;&amp;==&amp;a=&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">//{test: &quot;a=b=c&quot;, &quot;&quot;: &quot;=&quot;, a: &quot;&quot;}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,80),o=[p];function c(l,i){return s(),a("div",null,o)}const d=n(t,[["render",c],["__file","regexp.html.vue"]]);export{d as default};
