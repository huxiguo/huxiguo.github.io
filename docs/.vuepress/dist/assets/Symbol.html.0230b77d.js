import{_ as n,o as s,c as a,d as e}from"./app.33a8b393.js";const o={},p=e(`<h1 id="symbol" tabindex="-1"><a class="header-anchor" href="#symbol" aria-hidden="true">#</a> Symbol</h1><p><code>Symbol</code>\u662F ES6 \u65B0\u5F15\u5165\u7684\u539F\u59CB\u6570\u636E\u7C7B\u578B</p><p><code>Symbol</code>\u5B9E\u4F8B\u662F\u552F\u4E00\uFF0C\u4E0D\u53EF\u53D8\u7684</p><h2 id="\u57FA\u672C\u7528\u6CD5" tabindex="-1"><a class="header-anchor" href="#\u57FA\u672C\u7528\u6CD5" aria-hidden="true">#</a> \u57FA\u672C\u7528\u6CD5</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> s<span class="token punctuation">)</span> <span class="token comment">// symbol</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p><code>Symbol()</code>\u51FD\u6570\u524D\u4E0D\u80FD\u4F7F\u7528<code>new</code>\u547D\u4EE4\uFF0C\u5426\u5219\u4F1A\u62A5\u9519</p><p><code>Symbol</code>\u662F\u4E00\u4E2A\u539F\u59CB\u7C7B\u578B\u7684\u503C,\u4E0D\u662F\u5BF9\u8C61,\u6240\u4EE5\u4E0D\u80FD\u4F7F\u7528<code>new</code>\u547D\u4EE4\u6765\u8C03\u7528</p><p><code>Symbol</code>\u503C\u4E0D\u662F\u5BF9\u8C61\uFF0C\u6240\u4EE5\u4E5F\u4E0D\u80FD\u6DFB\u52A0\u5C5E\u6027</p></div><p>\u8C03\u7528<code>Symbol()</code>\u51FD\u6570\u65F6\u53EF\u4EE5\u4F20\u5165\u4E00\u4E2A\u5B57\u7B26\u4E32\u53C2\u6570\u4F5C\u4E3A\u63CF\u8FF0(description)</p><p>\u4E3B\u8981\u662F\u4E3A\u4E86\u5728\u63A7\u5236\u53F0\u663E\u793A\uFF0C\u6216\u8005\u8F6C\u4E3A\u5B57\u7B26\u4E32\u65F6\uFF0C\u6BD4\u8F83\u5BB9\u6613\u533A\u5206\u3002</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> genericSymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> otherGenericSymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> fooSymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> otherFooSymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>genericSymbol <span class="token operator">===</span> otherFooSymbol<span class="token punctuation">)</span> <span class="token comment">// false</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fooSymbol <span class="token operator">===</span> otherFooSymbol<span class="token punctuation">)</span> <span class="token comment">// false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container tip"><p class="custom-container-title">\u8BF4\u660E</p><p><code>Symbol()</code>\u53C2\u6570\u53EA\u4F5C\u4E3A\u63CF\u8FF0</p><p>\u76F8\u540C\u53C2\u6570\u7684\u8FD4\u56DE\u503C\u4E0D\u76F8\u7B49</p></div><p>\u5982\u679C<code>Symbol</code>\u7684\u53C2\u6570\u662F\u4E00\u4E2A\u5BF9\u8C61\uFF0C\u5C31\u4F1A\u8C03\u7528\u8BE5\u5BF9\u8C61\u7684<code>toString()</code>\u65B9\u6CD5\uFF0C\u5C06\u5176\u8F6C\u4E3A\u5B57\u7B26\u4E32\uFF0C\u7136\u540E\u624D\u751F\u6210\u4E00\u4E2A<code>Symbol</code>\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token string">&#39;hello&#39;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
<span class="token keyword">let</span> sym <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span>obj<span class="token punctuation">)</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>sym<span class="token punctuation">)</span> <span class="token comment">// Symbol(hello)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>ES2019 \u63D0\u4F9B\u4E86\u5B9E\u4F8B\u5C5E\u6027<code>description</code>\u76F4\u63A5\u8FD4\u56DE<code>Symbol</code>\u503C\u7684\u63CF\u8FF0</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> fooSymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>fooSymbol<span class="token punctuation">.</span>description<span class="token punctuation">)</span> <span class="token comment">// foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u4F5C\u4E3A\u5C5E\u6027\u540D\u7684symbol" tabindex="-1"><a class="header-anchor" href="#\u4F5C\u4E3A\u5C5E\u6027\u540D\u7684symbol" aria-hidden="true">#</a> \u4F5C\u4E3A\u5C5E\u6027\u540D\u7684<code>Symbol</code></h2><p><code>Symbol</code>\u7528\u4E8E\u5BF9\u8C61\u7684\u5C5E\u6027\u540D\uFF0C\u5C31\u80FD\u4FDD\u8BC1\u4E0D\u4F1A\u51FA\u73B0\u540C\u540D\u7684\u5C5E\u6027</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> mySymbol <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
a<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">&#39;hello!&#39;</span>

<span class="token keyword">let</span> b <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;hello!&#39;</span>
<span class="token punctuation">}</span>

<span class="token keyword">let</span> c <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>
Object<span class="token punctuation">.</span><span class="token function">defineProperty</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> mySymbol<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">&#39;hello!&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// hello!</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>b<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// hello!</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>c<span class="token punctuation">[</span>mySymbol<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">// hello!</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><p class="custom-container-title">\u6CE8\u610F</p><p><code>Symbol</code>\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u540D\u4E0D\u80FD\u7528\u70B9\u8FD0\u7B97\u7B26</p><p>\u4F7F\u7528<code>Symbol</code>\u503C\u5B9A\u4E49\u5C5E\u6027\u65F6\uFF0C<code>Symbol</code>\u503C\u5FC5\u987B\u653E\u5728\u65B9\u62EC\u53F7\u4E4B\u4E2D</p></div><h2 id="\u5B9E\u4F8B-\u6D88\u9664\u9B54\u672F\u5B57\u7B26\u4E32" tabindex="-1"><a class="header-anchor" href="#\u5B9E\u4F8B-\u6D88\u9664\u9B54\u672F\u5B57\u7B26\u4E32" aria-hidden="true">#</a> \u5B9E\u4F8B\uFF1A\u6D88\u9664\u9B54\u672F\u5B57\u7B26\u4E32</h2><p>\u9B54\u672F\u5B57\u7B26\u4E32\uFF1A\u5728\u4EE3\u7801\u4E4B\u4E2D\u591A\u6B21\u51FA\u73B0\u3001\u4E0E\u4EE3\u7801\u5F62\u6210\u5F3A\u8026\u5408\u7684\u67D0\u4E00\u4E2A\u5177\u4F53\u7684\u5B57\u7B26\u4E32\u6216\u8005\u6570\u503C</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getArea</span><span class="token punctuation">(</span><span class="token parameter">shape<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> area <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> <span class="token string">&#39;Triangle&#39;</span><span class="token operator">:</span> <span class="token comment">// \u9B54\u672F\u5B57\u7B26\u4E32</span>
      area <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> options<span class="token punctuation">.</span>width <span class="token operator">*</span> options<span class="token punctuation">.</span>height
      <span class="token keyword">break</span>

    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> area
<span class="token punctuation">}</span>
<span class="token function">getArea</span><span class="token punctuation">(</span><span class="token string">&#39;Triangle&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token comment">// \u9B54\u672F\u5B57\u7B26\u4E32</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>\u6D88\u9664\u65B9\u6CD5\uFF1A\u5C06<code>Triangle</code>\u8BBE\u4E3A\u53D8\u91CF</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">const</span> shapeType <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token literal-property property">triangle</span><span class="token operator">:</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;triangle&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span>
<span class="token keyword">function</span> <span class="token function">getArea</span><span class="token punctuation">(</span><span class="token parameter">shape<span class="token punctuation">,</span> options</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> area <span class="token operator">=</span> <span class="token number">0</span>
  <span class="token keyword">switch</span> <span class="token punctuation">(</span>shape<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">case</span> shapeType<span class="token punctuation">.</span>triangle<span class="token operator">:</span>
      area <span class="token operator">=</span> <span class="token number">0.5</span> <span class="token operator">*</span> options<span class="token punctuation">.</span>width <span class="token operator">*</span> options<span class="token punctuation">.</span>height
      <span class="token keyword">break</span>

    <span class="token keyword">default</span><span class="token operator">:</span>
      <span class="token keyword">break</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">return</span> area
<span class="token punctuation">}</span>
<span class="token function">getArea</span><span class="token punctuation">(</span>shapeType<span class="token punctuation">.</span>triangle<span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token literal-property property">height</span><span class="token operator">:</span> <span class="token number">100</span> <span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="\u5C5E\u6027\u540D\u904D\u5386" tabindex="-1"><a class="header-anchor" href="#\u5C5E\u6027\u540D\u904D\u5386" aria-hidden="true">#</a> \u5C5E\u6027\u540D\u904D\u5386</h2><p><code>Symbol</code>\u4F5C\u4E3A\u5BF9\u8C61\u5C5E\u6027\u5C5E\u6027\u65F6\u7528<code>Object.getOwnPropertySymbols()</code>\u65B9\u6CD5\uFF0C\u83B7\u53D6\u5BF9\u8C61\u4E2D\u6240\u6709<code>Symbol</code>\u5C5E\u6027\u540D\uFF0C\u8FD4\u56DE\u4E00\u4E2A\u6570\u7EC4</p><p><code>Object.getOwnPropertyNames()</code>\u8FD4\u56DE\u5E38\u89C4\u5C5E\u6027\u7684\u6570\u7EC4</p><p><code>Object.getOwnPropertyDescriptors(o)</code>\u8FD4\u56DE\u540C\u65F6\u5305\u542B\u5E38\u89C4\u548C Symbol \u5C5E\u6027\u7684\u5BF9\u8C61</p><p><code>Reflect.ownKeys()</code> \u65B9\u6CD5\u53EF\u4EE5\u8FD4\u56DE\u6240\u6709\u7C7B\u578B\u7684\u952E\u540D\uFF0C\u5305\u62EC\u5E38\u89C4\u952E\u540D\u548C Symbol \u952E\u540D\u7684\u6570\u7EC4</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;bar&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">let</span> o <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token punctuation">[</span>s1<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;foo val&#39;</span><span class="token punctuation">,</span>
  <span class="token punctuation">[</span>s2<span class="token punctuation">]</span><span class="token operator">:</span> <span class="token string">&#39;bar val&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">baz</span><span class="token operator">:</span> <span class="token string">&#39;baz val&#39;</span><span class="token punctuation">,</span>
  <span class="token literal-property property">qux</span><span class="token operator">:</span> <span class="token string">&#39;qux val&#39;</span>
<span class="token punctuation">}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertySymbols</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [Symbol(foo), Symbol(bar)]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyNames</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// [&#39;baz&#39;, &#39;qux&#39;]</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Object<span class="token punctuation">.</span><span class="token function">getOwnPropertyDescriptors</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">// {baz: {\u2026}, qux: {\u2026}, Symbol(foo): {\u2026}, Symbol(bar): {\u2026}}</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Reflect<span class="token punctuation">.</span><span class="token function">ownKeys</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token comment">//  [&#39;baz&#39;, &#39;qux&#39;, Symbol(foo), Symbol(bar)]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="symbol-for-\u548Csymbol-keyfor" tabindex="-1"><a class="header-anchor" href="#symbol-for-\u548Csymbol-keyfor" aria-hidden="true">#</a> <code>Symbol.for()</code>\u548C<code>Symbol.keyFor()</code></h2><p><code>Symbol.for()</code>\u63A5\u53D7\u4E00\u4E2A\u5B57\u7B26\u4E32\u53C2\u6570\uFF0C\u4F1A\u5148\u641C\u7D22\u6709\u6CA1\u6709\u4EE5\u8BE5\u5B57\u7B26\u4E32\u4F5C\u4E3A\u540D\u79F0\u7684<code>Symbol</code>,\u6709\u5C31\u8FD4\u56DE\u8FD9\u4E2A\u503C\uFF0C\u6CA1\u6709\u5C31\u65B0\u5EFA\u4E00\u4E2A\u5E76\u6CE8\u518C\u5230\u5168\u5C40</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s1 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u521B\u5EFA\u65B0\u7B26\u53F7</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span> <span class="token comment">// \u91CD\u7528\u5DF2\u6709\u7684\u7B26\u53F7</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>s1 <span class="token operator">===</span> s2<span class="token punctuation">)</span> <span class="token comment">// true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Symbol.keyFor()</code>\u8FD4\u56DE\u4E00\u4E2A\u5DF2\u767B\u8BB0\u7684 Symbol \u7C7B\u578B\u503C\u7684<code>key</code></p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token keyword">let</span> s1 <span class="token operator">=</span> <span class="token function">Symbol</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">let</span> s2 <span class="token operator">=</span> Symbol<span class="token punctuation">.</span><span class="token function">for</span><span class="token punctuation">(</span><span class="token string">&#39;foo&#39;</span><span class="token punctuation">)</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// undefined</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Symbol<span class="token punctuation">.</span><span class="token function">keyFor</span><span class="token punctuation">(</span>s2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">// foo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,34),t=[p];function c(l,i){return s(),a("div",null,t)}const r=n(o,[["render",c],["__file","Symbol.html.vue"]]);export{r as default};
